[
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65062",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65062/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65062/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65062/events",
        "html_url": "https://github.com/apple/swift/issues/65062",
        "id": 1662272165,
        "node_id": "I_kwDOAqwwJc5jFEKl",
        "number": 65062,
        "title": "Handle patterns for argument list related diagnostics",
        "user": {
            "login": "hamishknight",
            "id": 14794099,
            "node_id": "MDQ6VXNlcjE0Nzk0MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14794099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hamishknight",
            "html_url": "https://github.com/hamishknight",
            "followers_url": "https://api.github.com/users/hamishknight/followers",
            "following_url": "https://api.github.com/users/hamishknight/following{/other_user}",
            "gists_url": "https://api.github.com/users/hamishknight/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hamishknight/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hamishknight/subscriptions",
            "organizations_url": "https://api.github.com/users/hamishknight/orgs",
            "repos_url": "https://api.github.com/users/hamishknight/repos",
            "events_url": "https://api.github.com/users/hamishknight/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hamishknight/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 277147936,
                "node_id": "MDU6TGFiZWwyNzcxNDc5MzY=",
                "url": "https://api.github.com/repos/apple/swift/labels/bug",
                "name": "bug",
                "color": "B60205",
                "default": true,
                "description": "A deviation from expected or documented behavior. Also: expected but undesirable behavior."
            },
            {
                "id": 4067774889,
                "node_id": "LA_kwDOAqwwJc7ydVGp",
                "url": "https://api.github.com/repos/apple/swift/labels/diagnostics%20QoI",
                "name": "diagnostics QoI",
                "color": "8d404a",
                "default": false,
                "description": "Diagnostics Quality of Implementation"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "hamishknight",
            "id": 14794099,
            "node_id": "MDQ6VXNlcjE0Nzk0MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14794099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hamishknight",
            "html_url": "https://github.com/hamishknight",
            "followers_url": "https://api.github.com/users/hamishknight/followers",
            "following_url": "https://api.github.com/users/hamishknight/following{/other_user}",
            "gists_url": "https://api.github.com/users/hamishknight/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hamishknight/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hamishknight/subscriptions",
            "organizations_url": "https://api.github.com/users/hamishknight/orgs",
            "repos_url": "https://api.github.com/users/hamishknight/repos",
            "events_url": "https://api.github.com/users/hamishknight/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hamishknight/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hamishknight",
                "id": 14794099,
                "node_id": "MDQ6VXNlcjE0Nzk0MDk5",
                "avatar_url": "https://avatars.githubusercontent.com/u/14794099?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hamishknight",
                "html_url": "https://github.com/hamishknight",
                "followers_url": "https://api.github.com/users/hamishknight/followers",
                "following_url": "https://api.github.com/users/hamishknight/following{/other_user}",
                "gists_url": "https://api.github.com/users/hamishknight/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hamishknight/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hamishknight/subscriptions",
                "organizations_url": "https://api.github.com/users/hamishknight/orgs",
                "repos_url": "https://api.github.com/users/hamishknight/repos",
                "events_url": "https://api.github.com/users/hamishknight/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hamishknight/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T11:18:34Z",
        "updated_at": "2023-04-11T11:18:35Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "For the argument list related diagnostics we do in CSDiagnostics, we're currently expecting to get an ArgumentList for the locator, but that doesn't work if the issue is in a enum element pattern argument list. We need to work on updating the various places in that logic to handle Patterns, either by pulling some trickery and synthesizing a mock ArgumentList or something for the pattern, or abstracting a type that can handle both regular argument lists and pattern argument lists.",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65062/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65062/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65061",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65061/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65061/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65061/events",
        "html_url": "https://github.com/apple/swift/issues/65061",
        "id": 1662211964,
        "node_id": "I_kwDOAqwwJc5jE1d8",
        "number": 65061,
        "title": "Type inference fails when a literal is passed to a generic function and the return value is applied to a binary operator.",
        "user": {
            "login": "kishikawakatsumi",
            "id": 40610,
            "node_id": "MDQ6VXNlcjQwNjEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/40610?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kishikawakatsumi",
            "html_url": "https://github.com/kishikawakatsumi",
            "followers_url": "https://api.github.com/users/kishikawakatsumi/followers",
            "following_url": "https://api.github.com/users/kishikawakatsumi/following{/other_user}",
            "gists_url": "https://api.github.com/users/kishikawakatsumi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kishikawakatsumi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kishikawakatsumi/subscriptions",
            "organizations_url": "https://api.github.com/users/kishikawakatsumi/orgs",
            "repos_url": "https://api.github.com/users/kishikawakatsumi/repos",
            "events_url": "https://api.github.com/users/kishikawakatsumi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kishikawakatsumi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 277147936,
                "node_id": "MDU6TGFiZWwyNzcxNDc5MzY=",
                "url": "https://api.github.com/repos/apple/swift/labels/bug",
                "name": "bug",
                "color": "B60205",
                "default": true,
                "description": "A deviation from expected or documented behavior. Also: expected but undesirable behavior."
            },
            {
                "id": 4816455067,
                "node_id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                "url": "https://api.github.com/repos/apple/swift/labels/triage%20needed",
                "name": "triage needed",
                "color": "ffffff",
                "default": false,
                "description": "This issue needs more specific labels"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T10:37:02Z",
        "updated_at": "2023-04-11T10:37:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Description**\r\n\r\nWhen I pass a literal expression as an argument to a generic function and compare its return value to another literal with a binary operator, the `==` case is not a problem, but `! =` causes the type inference failure and a compilation error.\r\n\r\nI have confirmed that some cases compile correctly in Swift 4.2.3. Also, the difference between `==` and `! =` operators gives different type inference results on either side, which seems odd. So this seems to be some kind of regression in Swift 5.\r\n\r\n**Steps to reproduce**\r\n\r\n1. Define the following generic function:\r\n\r\n```swift\r\nfunc f<T>(_ val: T) -> T {\r\n  return val\r\n}\r\n```\r\n\r\n2. Use the function in the following code segments a and b:\r\n\r\n```swift\r\nlet i = 0\r\n_ = f([0]).firstIndex(of: 0) == i // a\r\n_ = f([0]).firstIndex(of: 0) != i // b // Error\r\n```\r\n\r\nThe Swift compiler produces a compilation error for code segment b, while code segment a compiles without any issues. The only difference between the two is which binary operator is used. The error message is `Value of optional type 'Int?' must be unwrapped to a value of type 'Int'`. The only difference between the two segments is the binary operator. It seems odd that it would cause an error in one of them.\r\n\r\nBoth codes compile correctly in Swift 4.2.3. It appears to be a regression that probably occurred in Swift 5.\r\nSee https://swiftfiddle.com/ky3flhj6wnc3hkxw6ft4lfnx7q\r\n\r\n**Expected behavior**\r\n\r\nBoth code segments a and b should compile without errors, as the only difference between them is the binary operator.\r\n\r\n**Environment**\r\n\r\n- Swift compiler version info\r\n  -  from `Swift version 5.0 (swift-5.0-RELEASE)` to `Swift version 5.8 (swift-5.8-RELEASE)`  and `5.9-dev (LLVM 8ef0b2ab8e410d9, Swift 76d60fde58eab47)`\r\n- Xcode version info `Xcode 14.3 Build version 14E222b`\r\n\r\n**Additional context**\r\n\r\nAs a temporary workaround, defining an overloaded function as follows fixes the compilation error:\r\n\r\n```swift\r\nfunc f<T>(_ val: [T]) -> [T] {\r\n  return val\r\n}\r\n```\r\n\r\nThis indicates that the issue might be related to the compiler's inability to infer the type from the literals correctly.\r\n\r\n\r\n#### Similar cases\r\n##### Float literals\r\n\r\nThis happens not only with array literals but also with float and string literals.\r\n\r\nThe following code causes a compile error `Ambiguous use of operator '=='` for line a.\r\nThis problem does not occur in the Linux environment but only in the Mac environment, resulting in a compile error.\r\n\r\n```swift\r\n _ = f(0.0) == 1 // a\r\n _ = f(0.0) != 1 // b\r\n```\r\n\r\nThis problem does not occur if the following overloads are provided:\r\n\r\n```swift\r\nfunc f(_ val: Float) -> Float {\r\n    return val\r\n}\r\n```\r\n\r\n##### String literals\r\n\r\nThe following code causes a compile error `Value of optional type 'String.Element?' (aka 'Optional<Character>') must be unwrapped to a value of type 'String.Element' (aka 'Character')` for line b.\r\n\r\n```swift\r\nlet c: Character = \"a\"\r\n_ = f(\"\").first == c // a\r\n_ = f(\"\").first != c // b\r\n```\r\n\r\nThis issue occurs in both Linux and Mac environments.\r\n\r\nAlso, as in the first example, it does not occur in a Swift 4.2.4 environment. See https://swiftfiddle.com/b2o6hyjbfjdhre47tkovyq4oja\r\n\r\n\r\nAs with the other examples, this problem does not occur if you provide the following overloads:\r\n\r\n```swift\r\nfunc f(_ val: String) -> String {\r\n    return val\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65061/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65061/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65060",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65060/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65060/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65060/events",
        "html_url": "https://github.com/apple/swift/pull/65060",
        "id": 1662010043,
        "node_id": "PR_kwDOAqwwJc5N_6up",
        "number": 65060,
        "title": "Add the `drop_deinit` instruction",
        "user": {
            "login": "eeckstein",
            "id": 15270291,
            "node_id": "MDQ6VXNlcjE1MjcwMjkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/15270291?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eeckstein",
            "html_url": "https://github.com/eeckstein",
            "followers_url": "https://api.github.com/users/eeckstein/followers",
            "following_url": "https://api.github.com/users/eeckstein/following{/other_user}",
            "gists_url": "https://api.github.com/users/eeckstein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eeckstein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eeckstein/subscriptions",
            "organizations_url": "https://api.github.com/users/eeckstein/orgs",
            "repos_url": "https://api.github.com/users/eeckstein/repos",
            "events_url": "https://api.github.com/users/eeckstein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eeckstein/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-11T08:31:09Z",
        "updated_at": "2023-04-11T08:31:21Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65060",
            "html_url": "https://github.com/apple/swift/pull/65060",
            "diff_url": "https://github.com/apple/swift/pull/65060.diff",
            "patch_url": "https://github.com/apple/swift/pull/65060.patch",
            "merged_at": null
        },
        "body": "The `drop_deinit` instruction is a marker for a following destroy instruction to suppress the call of the move-only type's deinitializer.\r\n\r\nSILGen needs to insert `drop_deinit` in move-only deinitializers to avoid that - due to other optimizations, like inlining - the deinitializer call is inserted multiple times.\r\n\r\nrdar://105798769\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65060/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65060/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65059",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65059/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65059/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65059/events",
        "html_url": "https://github.com/apple/swift/issues/65059",
        "id": 1661998681,
        "node_id": "I_kwDOAqwwJc5jEBZZ",
        "number": 65059,
        "title": "Runtime crash \"___lldb_unnamed_symbol\" or \"OUTLINED_FUNCTION\" in production crash report",
        "user": {
            "login": "Rukh",
            "id": 5529162,
            "node_id": "MDQ6VXNlcjU1MjkxNjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5529162?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Rukh",
            "html_url": "https://github.com/Rukh",
            "followers_url": "https://api.github.com/users/Rukh/followers",
            "following_url": "https://api.github.com/users/Rukh/following{/other_user}",
            "gists_url": "https://api.github.com/users/Rukh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Rukh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Rukh/subscriptions",
            "organizations_url": "https://api.github.com/users/Rukh/orgs",
            "repos_url": "https://api.github.com/users/Rukh/repos",
            "events_url": "https://api.github.com/users/Rukh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Rukh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 277147936,
                "node_id": "MDU6TGFiZWwyNzcxNDc5MzY=",
                "url": "https://api.github.com/repos/apple/swift/labels/bug",
                "name": "bug",
                "color": "B60205",
                "default": true,
                "description": "A deviation from expected or documented behavior. Also: expected but undesirable behavior."
            },
            {
                "id": 4816455067,
                "node_id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                "url": "https://api.github.com/repos/apple/swift/labels/triage%20needed",
                "name": "triage needed",
                "color": "ffffff",
                "default": false,
                "description": "This issue needs more specific labels"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T08:23:12Z",
        "updated_at": "2023-04-11T08:23:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\nThis repository tracks issues related to the implementation of the Swift\r\ncompiler, standard library, runtime, and tools that provide IDE support for\r\nSwift (e.g. code completion). If the bug relates to the implementation of a\r\nproprietary (closed-source) Apple framework such as UIKit, SwiftUI, Combine,\r\netc., please report it to https://feedbackassistant.apple.com instead.\r\n-->\r\n\r\n**Description**\r\nCrash in Release mode or if `SWIFT_OPTIMIZATION_LEVEL` of Swift Compiler - is `Optimize for Speed [-O]`. It works as expected in Debug mode.\r\n\r\n**Steps to reproduce**\r\n1. Do a SwiftUI project with `SWIFT_OPTIMIZATION_LEVEL=\"-O\"`\r\n2. Past code \r\n```swift\r\nstruct ContentView: View {\r\n    var body: some View {\r\n        let circle = Circle().frame(width: 8)\r\n        let arrowDown = Image(systemName: \"arrow.up\")\r\n        HStack {\r\n            Button { } label: {\r\n                circle\r\n                arrowDown\r\n            }\r\n            Button { } label: {\r\n                arrowDown\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nstruct ContentView_Previews: PreviewProvider {\r\n    static var previews: some View {\r\n        ContentView()\r\n    }\r\n}\r\n```\r\n3. Run on MacOS, iOS or Simulator\r\n4. It crashed with\r\n```text\r\n#0\t0x00000001b9b879ac in ___lldb_unnamed_symbol63543 ()\r\n#1\t0x00000001b9c3edcc in ___lldb_unnamed_symbol67820 ()\r\n#2\t0x00000001b9c04f90 in ___lldb_unnamed_symbol66301 ()\r\n#3\t0x00000001b9bc05a4 in ___lldb_unnamed_symbol64697 ()\r\n#4\t0x00000001b9bc3458 in ___lldb_unnamed_symbol64758 ()\r\n#5\t0x00000001b9bba5c4 in ___lldb_unnamed_symbol64547 ()\r\n#6\t0x00000001ba3747dc in ___lldb_unnamed_symbol130757 ()\r\n#7\t0x00000001ba970fcc in ___lldb_unnamed_symbol181857 ()\r\n#8\t0x00000001ba8a52e4 in ___lldb_unnamed_symbol174959 ()\r\n#9\t0x00000001ba8a4374 in ___lldb_unnamed_symbol174955 ()\r\n#10\t0x00000001ba8a66b4 in ___lldb_unnamed_symbol174964 ()\r\n```\r\n\r\n**Important**\r\nIf replace `let circle = ` to `lazy var circle = ` crash not reproduced\r\n\r\n**Expected behavior**\r\nNo crash or warning, or compilation error\r\n\r\n**Environment**\r\n- Swift compiler version info `swift-driver version: 1.75.2 Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)`\r\n- Xcode version info `Version 14.3 (14E222b)`\r\n- Deployment target: `iOS 16.3.1` or `macOS 13.2.1`\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65059/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65059/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65058",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65058/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65058/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65058/events",
        "html_url": "https://github.com/apple/swift/pull/65058",
        "id": 1661856613,
        "node_id": "PR_kwDOAqwwJc5N_aYS",
        "number": 65058,
        "title": "[CAS] Integrate CAS into swift compiler",
        "user": {
            "login": "cachemeifyoucan",
            "id": 15947485,
            "node_id": "MDQ6VXNlcjE1OTQ3NDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/15947485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cachemeifyoucan",
            "html_url": "https://github.com/cachemeifyoucan",
            "followers_url": "https://api.github.com/users/cachemeifyoucan/followers",
            "following_url": "https://api.github.com/users/cachemeifyoucan/following{/other_user}",
            "gists_url": "https://api.github.com/users/cachemeifyoucan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cachemeifyoucan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cachemeifyoucan/subscriptions",
            "organizations_url": "https://api.github.com/users/cachemeifyoucan/orgs",
            "repos_url": "https://api.github.com/users/cachemeifyoucan/repos",
            "events_url": "https://api.github.com/users/cachemeifyoucan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cachemeifyoucan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-11T06:37:37Z",
        "updated_at": "2023-04-11T11:29:00Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65058",
            "html_url": "https://github.com/apple/swift/pull/65058",
            "diff_url": "https://github.com/apple/swift/pull/65058.diff",
            "patch_url": "https://github.com/apple/swift/pull/65058.patch",
            "merged_at": null
        },
        "body": "Teach swift compiler about CAS to allow compiler caching in the future.\r\n1) Add flags to initiate CAS inside swift-frontend\r\n2) Teach swift to compile using a CAS file system.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65058/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65058/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65057",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65057/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65057/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65057/events",
        "html_url": "https://github.com/apple/swift/pull/65057",
        "id": 1661825278,
        "node_id": "PR_kwDOAqwwJc5N_Txn",
        "number": 65057,
        "title": "[cxx-interop] Adding std.string initializer for UnsafePointer<CChar>?",
        "user": {
            "login": "plotfi",
            "id": 34139736,
            "node_id": "MDQ6VXNlcjM0MTM5NzM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34139736?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plotfi",
            "html_url": "https://github.com/plotfi",
            "followers_url": "https://api.github.com/users/plotfi/followers",
            "following_url": "https://api.github.com/users/plotfi/following{/other_user}",
            "gists_url": "https://api.github.com/users/plotfi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/plotfi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/plotfi/subscriptions",
            "organizations_url": "https://api.github.com/users/plotfi/orgs",
            "repos_url": "https://api.github.com/users/plotfi/repos",
            "events_url": "https://api.github.com/users/plotfi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/plotfi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2011844309,
                "node_id": "MDU6TGFiZWwyMDExODQ0MzA5",
                "url": "https://api.github.com/repos/apple/swift/labels/c++%20interop",
                "name": "c++ interop",
                "color": "E99695",
                "default": false,
                "description": "Feature: Interoperability with C++"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-11T06:04:52Z",
        "updated_at": "2023-04-11T11:02:23Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65057",
            "html_url": "https://github.com/apple/swift/pull/65057",
            "diff_url": "https://github.com/apple/swift/pull/65057.diff",
            "patch_url": "https://github.com/apple/swift/pull/65057.patch",
            "merged_at": null
        },
        "body": "Currently without an initializer for the unsafe char pointer type swiftc hits an assert around not being able to handle conversions of unsafe pointers with Any type. This patch adds the ability to convert to a std::string.\r\n\r\nThis is to address issue https://github.com/apple/swift/issues/61218\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65057/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65057/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65056",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65056/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65056/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65056/events",
        "html_url": "https://github.com/apple/swift/pull/65056",
        "id": 1661658898,
        "node_id": "PR_kwDOAqwwJc5N-xNE",
        "number": 65056,
        "title": "[interop] do not import functions whose return type is not imported",
        "user": {
            "login": "hyp",
            "id": 820551,
            "node_id": "MDQ6VXNlcjgyMDU1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/820551?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hyp",
            "html_url": "https://github.com/hyp",
            "followers_url": "https://api.github.com/users/hyp/followers",
            "following_url": "https://api.github.com/users/hyp/following{/other_user}",
            "gists_url": "https://api.github.com/users/hyp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hyp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hyp/subscriptions",
            "organizations_url": "https://api.github.com/users/hyp/orgs",
            "repos_url": "https://api.github.com/users/hyp/repos",
            "events_url": "https://api.github.com/users/hyp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hyp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2011844309,
                "node_id": "MDU6TGFiZWwyMDExODQ0MzA5",
                "url": "https://api.github.com/repos/apple/swift/labels/c++%20interop",
                "name": "c++ interop",
                "color": "E99695",
                "default": false,
                "description": "Feature: Interoperability with C++"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-11T02:08:51Z",
        "updated_at": "2023-04-11T02:09:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65056",
            "html_url": "https://github.com/apple/swift/pull/65056",
            "diff_url": "https://github.com/apple/swift/pull/65056.diff",
            "patch_url": "https://github.com/apple/swift/pull/65056.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65056/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65056/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65055",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65055/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65055/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65055/events",
        "html_url": "https://github.com/apple/swift/pull/65055",
        "id": 1661614012,
        "node_id": "PR_kwDOAqwwJc5N-n9Z",
        "number": 65055,
        "title": "[cxx-interop] Include `Cxx` and `CxxStdlib` modules in no-stdlib builds",
        "user": {
            "login": "egorzhdan",
            "id": 3801618,
            "node_id": "MDQ6VXNlcjM4MDE2MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3801618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/egorzhdan",
            "html_url": "https://github.com/egorzhdan",
            "followers_url": "https://api.github.com/users/egorzhdan/followers",
            "following_url": "https://api.github.com/users/egorzhdan/following{/other_user}",
            "gists_url": "https://api.github.com/users/egorzhdan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/egorzhdan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/egorzhdan/subscriptions",
            "organizations_url": "https://api.github.com/users/egorzhdan/orgs",
            "repos_url": "https://api.github.com/users/egorzhdan/repos",
            "events_url": "https://api.github.com/users/egorzhdan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/egorzhdan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2011844309,
                "node_id": "MDU6TGFiZWwyMDExODQ0MzA5",
                "url": "https://api.github.com/repos/apple/swift/labels/c++%20interop",
                "name": "c++ interop",
                "color": "E99695",
                "default": false,
                "description": "Feature: Interoperability with C++"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-11T01:03:59Z",
        "updated_at": "2023-04-11T01:21:28Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65055",
            "html_url": "https://github.com/apple/swift/pull/65055",
            "diff_url": "https://github.com/apple/swift/pull/65055.diff",
            "patch_url": "https://github.com/apple/swift/pull/65055.patch",
            "merged_at": null
        },
        "body": "These modules are shipped with the toolchain, while the stdlib might be built and shipped separately.\r\n\r\nrdar://107780733",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65055/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65055/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65053",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65053/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65053/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65053/events",
        "html_url": "https://github.com/apple/swift/pull/65053",
        "id": 1661566638,
        "node_id": "PR_kwDOAqwwJc5N-dv0",
        "number": 65053,
        "title": "[ConstraintSystem] NFC: Print attributes/capabilities only for unboun…",
        "user": {
            "login": "xedin",
            "id": 21240,
            "node_id": "MDQ6VXNlcjIxMjQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/21240?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xedin",
            "html_url": "https://github.com/xedin",
            "followers_url": "https://api.github.com/users/xedin/followers",
            "following_url": "https://api.github.com/users/xedin/following{/other_user}",
            "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
            "organizations_url": "https://api.github.com/users/xedin/orgs",
            "repos_url": "https://api.github.com/users/xedin/repos",
            "events_url": "https://api.github.com/users/xedin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xedin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-11T00:01:01Z",
        "updated_at": "2023-04-11T02:16:18Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65053",
            "html_url": "https://github.com/apple/swift/pull/65053",
            "diff_url": "https://github.com/apple/swift/pull/65053.diff",
            "patch_url": "https://github.com/apple/swift/pull/65053.patch",
            "merged_at": null
        },
        "body": "…d type variables\r\n\r\nPrint bound type variables as `$T<Num> as <Type> @ <locator>` \r\nand unbound ones as `$T<Num> [allows bindings to: ...] [attributes: ...] ... @ <locator>`\r\n\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/main/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65053/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65053/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65052",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65052/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65052/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65052/events",
        "html_url": "https://github.com/apple/swift/pull/65052",
        "id": 1661537733,
        "node_id": "PR_kwDOAqwwJc5N-Xhk",
        "number": 65052,
        "title": "[TempRValueOpt] Fold added destroy_addrs into loads/copy_addrs.",
        "user": {
            "login": "nate-chandler",
            "id": 46721658,
            "node_id": "MDQ6VXNlcjQ2NzIxNjU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/46721658?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nate-chandler",
            "html_url": "https://github.com/nate-chandler",
            "followers_url": "https://api.github.com/users/nate-chandler/followers",
            "following_url": "https://api.github.com/users/nate-chandler/following{/other_user}",
            "gists_url": "https://api.github.com/users/nate-chandler/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nate-chandler/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nate-chandler/subscriptions",
            "organizations_url": "https://api.github.com/users/nate-chandler/orgs",
            "repos_url": "https://api.github.com/users/nate-chandler/repos",
            "events_url": "https://api.github.com/users/nate-chandler/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nate-chandler/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-10T23:23:24Z",
        "updated_at": "2023-04-10T23:27:33Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65052",
            "html_url": "https://github.com/apple/swift/pull/65052",
            "diff_url": "https://github.com/apple/swift/pull/65052.diff",
            "patch_url": "https://github.com/apple/swift/pull/65052.patch",
            "merged_at": null
        },
        "body": "To avoid introducing new copies--which is illegal for move-only values-- don't rewrite `load [take]`s and `copy_addr [take]`s as `load [copy]`s and `copy_addr`s respectively and introduce new `destroy_addr`s after them.  Instead, get the effect of folding such a newly created `destroy_addr` into the preceding rewritten `load [copy]` or `copy_addr`.  Get that effect by neither modifying the `copy_addr [take]` or `load [take]` nor adding a subsequent `destroy_addr`.\n\nAn example for each kind (`load [take]` and `copy_addr [take]`):\n\n```\n// Input 1 (`load [take]`)\n  copy_addr [take] %src to [init] %tmp\n  %val = load [take] %src\n// Old Output 1\n  %val = load [copy] %src\n  destroy_addr %src\n// New Output 2\n  %val = load [take] %src\n```\n\n```\n// Input 2 (`copy_addr [take]`)\n  copy_addr [take] %src to [init] %tmp\n  copy_addr [take] %src to [init] %dst\n// Old Output 2\n  copy_addr %src to [init] %dst\n  destroy_addr %src\n// New Output 2\n  copy_addr [take] %src to [init] %dst\n```\n\nrdar://107839979\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65052/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65052/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65051",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65051/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65051/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65051/events",
        "html_url": "https://github.com/apple/swift/pull/65051",
        "id": 1661515184,
        "node_id": "PR_kwDOAqwwJc5N-Se-",
        "number": 65051,
        "title": "[swift][AutoLinkExtract] Don't add autolink hint for frameworks.",
        "user": {
            "login": "ributzka",
            "id": 15787836,
            "node_id": "MDQ6VXNlcjE1Nzg3ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/15787836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ributzka",
            "html_url": "https://github.com/ributzka",
            "followers_url": "https://api.github.com/users/ributzka/followers",
            "following_url": "https://api.github.com/users/ributzka/following{/other_user}",
            "gists_url": "https://api.github.com/users/ributzka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ributzka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ributzka/subscriptions",
            "organizations_url": "https://api.github.com/users/ributzka/orgs",
            "repos_url": "https://api.github.com/users/ributzka/repos",
            "events_url": "https://api.github.com/users/ributzka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ributzka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-10T23:00:55Z",
        "updated_at": "2023-04-10T23:37:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65051",
            "html_url": "https://github.com/apple/swift/pull/65051",
            "diff_url": "https://github.com/apple/swift/pull/65051.diff",
            "patch_url": "https://github.com/apple/swift/pull/65051.patch",
            "merged_at": null
        },
        "body": "Default system linkers on non-Darwin platforms do not support the `-framework` argument for framework linking. This change updates autolinking to not emit `-framework` into the .o _swift1_autolink_entries metadata when there is no native linker support.\r\n\r\nThis is related to rdar://106578342.",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65051/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65051/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65050",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65050/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65050/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65050/events",
        "html_url": "https://github.com/apple/swift/pull/65050",
        "id": 1661499980,
        "node_id": "PR_kwDOAqwwJc5N-O_b",
        "number": 65050,
        "title": "the void",
        "user": {
            "login": "kavon",
            "id": 188095,
            "node_id": "MDQ6VXNlcjE4ODA5NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/188095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kavon",
            "html_url": "https://github.com/kavon",
            "followers_url": "https://api.github.com/users/kavon/followers",
            "following_url": "https://api.github.com/users/kavon/following{/other_user}",
            "gists_url": "https://api.github.com/users/kavon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kavon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kavon/subscriptions",
            "organizations_url": "https://api.github.com/users/kavon/orgs",
            "repos_url": "https://api.github.com/users/kavon/repos",
            "events_url": "https://api.github.com/users/kavon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kavon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-10T22:49:38Z",
        "updated_at": "2023-04-10T22:49:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65050",
            "html_url": "https://github.com/apple/swift/pull/65050",
            "diff_url": "https://github.com/apple/swift/pull/65050.diff",
            "patch_url": "https://github.com/apple/swift/pull/65050.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65050/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65050/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65049",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65049/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65049/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65049/events",
        "html_url": "https://github.com/apple/swift/pull/65049",
        "id": 1661494300,
        "node_id": "PR_kwDOAqwwJc5N-NtC",
        "number": 65049,
        "title": "[5.9][CSSyntaticElement] Desugar types before collecting \"in scope\" type v…",
        "user": {
            "login": "xedin",
            "id": 21240,
            "node_id": "MDQ6VXNlcjIxMjQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/21240?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xedin",
            "html_url": "https://github.com/xedin",
            "followers_url": "https://api.github.com/users/xedin/followers",
            "following_url": "https://api.github.com/users/xedin/following{/other_user}",
            "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
            "organizations_url": "https://api.github.com/users/xedin/orgs",
            "repos_url": "https://api.github.com/users/xedin/repos",
            "events_url": "https://api.github.com/users/xedin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xedin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4985394180,
                "node_id": "LA_kwDOAqwwJc8AAAABKScUBA",
                "url": "https://api.github.com/repos/apple/swift/labels/%F0%9F%8D%92%20release%20cherry-pick",
                "name": "🍒 release cherry-pick",
                "color": "8E0D81",
                "default": false,
                "description": "Release branch cherry-picks"
            },
            {
                "id": 5104671690,
                "node_id": "LA_kwDOAqwwJc8AAAABMEMbyg",
                "url": "https://api.github.com/repos/apple/swift/labels/swift%205.9",
                "name": "swift 5.9",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-10T22:45:28Z",
        "updated_at": "2023-04-10T22:45:38Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65049",
            "html_url": "https://github.com/apple/swift/pull/65049",
            "diff_url": "https://github.com/apple/swift/pull/65049.diff",
            "patch_url": "https://github.com/apple/swift/pull/65049.patch",
            "merged_at": null
        },
        "body": "…ariables\r\n\r\nCherry-pick of https://github.com/apple/swift/pull/65048\r\n\r\n--- \r\n\r\n- Explanation:\r\n\r\nGeneric type aliases, unless desugared, could bring unrelated type variables into the scope i.e. `TypeAlias<$T, $U>.Context` is actually `_Context<$U>`. These variables could be inferrable only after the the body the closure is solved. To avoid that, let's adjust `TypeVariableRefFinder` to desugar types before collecting referenced type variables.\r\n\r\n- Scope: Calls with multi-statement closures that get contextual parameters/result types that use generic type aliases.\r\n\r\n- Main Branch PR: https://github.com/apple/swift/pull/65048\r\n\r\n- Resolves: rdar://107835060\r\n\r\n- Risk: Low\r\n\r\n- Reviewed By: @hborla\r\n\r\n- Testing:  Added a regression test-case to the suite.\r\n\r\nResolves: rdar://107835060\r\n(cherry picked from commit ca14ab71570bce0e56dd0b5f93a8b21d66f3cbac)\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/main/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65049/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65049/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65048",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65048/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65048/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65048/events",
        "html_url": "https://github.com/apple/swift/pull/65048",
        "id": 1661484101,
        "node_id": "PR_kwDOAqwwJc5N-LYo",
        "number": 65048,
        "title": "[CSSyntaticElement] Desugar types before collecting \"in scope\" type v…",
        "user": {
            "login": "xedin",
            "id": 21240,
            "node_id": "MDQ6VXNlcjIxMjQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/21240?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xedin",
            "html_url": "https://github.com/xedin",
            "followers_url": "https://api.github.com/users/xedin/followers",
            "following_url": "https://api.github.com/users/xedin/following{/other_user}",
            "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
            "organizations_url": "https://api.github.com/users/xedin/orgs",
            "repos_url": "https://api.github.com/users/xedin/repos",
            "events_url": "https://api.github.com/users/xedin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xedin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-10T22:37:26Z",
        "updated_at": "2023-04-10T22:37:42Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65048",
            "html_url": "https://github.com/apple/swift/pull/65048",
            "diff_url": "https://github.com/apple/swift/pull/65048.diff",
            "patch_url": "https://github.com/apple/swift/pull/65048.patch",
            "merged_at": null
        },
        "body": "…ariables\r\n\r\nGeneric type aliases, unless desugared, could bring unrelated type variables into the scope i.e. \r\n`TypeAlias<$T, $U>.Context` is actually `_Context<$U>`. These variables could be inferrable \r\nonly after the the body the closure is solved. To avoid that, let's adjust `TypeVariableRefFinder`\r\nto desugar types before collecting referenced type variables.\r\n\r\nResolves: rdar://107835060\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/main/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65048/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65048/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65047",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65047/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65047/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65047/events",
        "html_url": "https://github.com/apple/swift/pull/65047",
        "id": 1661385922,
        "node_id": "PR_kwDOAqwwJc5N91a2",
        "number": 65047,
        "title": "Ignore profile counter instructions in the dihole verifier. ",
        "user": {
            "login": "adrian-prantl",
            "id": 2251653,
            "node_id": "MDQ6VXNlcjIyNTE2NTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2251653?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adrian-prantl",
            "html_url": "https://github.com/adrian-prantl",
            "followers_url": "https://api.github.com/users/adrian-prantl/followers",
            "following_url": "https://api.github.com/users/adrian-prantl/following{/other_user}",
            "gists_url": "https://api.github.com/users/adrian-prantl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adrian-prantl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adrian-prantl/subscriptions",
            "organizations_url": "https://api.github.com/users/adrian-prantl/orgs",
            "repos_url": "https://api.github.com/users/adrian-prantl/repos",
            "events_url": "https://api.github.com/users/adrian-prantl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adrian-prantl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-10T21:21:26Z",
        "updated_at": "2023-04-11T01:14:06Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65047",
            "html_url": "https://github.com/apple/swift/pull/65047",
            "diff_url": "https://github.com/apple/swift/pull/65047.diff",
            "patch_url": "https://github.com/apple/swift/pull/65047.patch",
            "merged_at": null
        },
        "body": "rdar://107764966\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65047/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65047/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65046",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65046/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65046/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65046/events",
        "html_url": "https://github.com/apple/swift/pull/65046",
        "id": 1661379330,
        "node_id": "PR_kwDOAqwwJc5N9z_K",
        "number": 65046,
        "title": "Reintroduce alwaysinline and nodebug as fallbacks to SWIFT_INLINE_THU…",
        "user": {
            "login": "augusto2112",
            "id": 2478850,
            "node_id": "MDQ6VXNlcjI0Nzg4NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2478850?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/augusto2112",
            "html_url": "https://github.com/augusto2112",
            "followers_url": "https://api.github.com/users/augusto2112/followers",
            "following_url": "https://api.github.com/users/augusto2112/following{/other_user}",
            "gists_url": "https://api.github.com/users/augusto2112/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/augusto2112/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/augusto2112/subscriptions",
            "organizations_url": "https://api.github.com/users/augusto2112/orgs",
            "repos_url": "https://api.github.com/users/augusto2112/repos",
            "events_url": "https://api.github.com/users/augusto2112/events{/privacy}",
            "received_events_url": "https://api.github.com/users/augusto2112/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-10T21:16:11Z",
        "updated_at": "2023-04-10T22:46:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65046",
            "html_url": "https://github.com/apple/swift/pull/65046",
            "diff_url": "https://github.com/apple/swift/pull/65046.diff",
            "patch_url": "https://github.com/apple/swift/pull/65046.patch",
            "merged_at": null
        },
        "body": "…NK_ATTRIBUTES\r\n\r\nIf the C++ compiler doesn't support the transparent_stepping attribute, fallback to annotating inline thunks with the alwaysinline and nodebug attributes.\r\n\r\n(cherry picked from commit cfb3e5abae56eefc9f8daa4b8dbddbe409e7fe91)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65046/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65045",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65045/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65045/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65045/events",
        "html_url": "https://github.com/apple/swift/pull/65045",
        "id": 1661195617,
        "node_id": "PR_kwDOAqwwJc5N9MMT",
        "number": 65045,
        "title": "[interop] mark C++ virtual functions as unavailable in Swift",
        "user": {
            "login": "hyp",
            "id": 820551,
            "node_id": "MDQ6VXNlcjgyMDU1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/820551?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hyp",
            "html_url": "https://github.com/hyp",
            "followers_url": "https://api.github.com/users/hyp/followers",
            "following_url": "https://api.github.com/users/hyp/following{/other_user}",
            "gists_url": "https://api.github.com/users/hyp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hyp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hyp/subscriptions",
            "organizations_url": "https://api.github.com/users/hyp/orgs",
            "repos_url": "https://api.github.com/users/hyp/repos",
            "events_url": "https://api.github.com/users/hyp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hyp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2011844309,
                "node_id": "MDU6TGFiZWwyMDExODQ0MzA5",
                "url": "https://api.github.com/repos/apple/swift/labels/c++%20interop",
                "name": "c++ interop",
                "color": "E99695",
                "default": false,
                "description": "Feature: Interoperability with C++"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-10T18:52:27Z",
        "updated_at": "2023-04-10T23:26:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65045",
            "html_url": "https://github.com/apple/swift/pull/65045",
            "diff_url": "https://github.com/apple/swift/pull/65045.diff",
            "patch_url": "https://github.com/apple/swift/pull/65045.patch",
            "merged_at": null
        },
        "body": "They're not yet supported\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65045/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65045/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65044",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65044/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65044/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65044/events",
        "html_url": "https://github.com/apple/swift/issues/65044",
        "id": 1661134446,
        "node_id": "I_kwDOAqwwJc5jAuZu",
        "number": 65044,
        "title": "`DispatchTimeInterval` is not `Sendable`",
        "user": {
            "login": "NachoSoto",
            "id": 685609,
            "node_id": "MDQ6VXNlcjY4NTYwOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/685609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NachoSoto",
            "html_url": "https://github.com/NachoSoto",
            "followers_url": "https://api.github.com/users/NachoSoto/followers",
            "following_url": "https://api.github.com/users/NachoSoto/following{/other_user}",
            "gists_url": "https://api.github.com/users/NachoSoto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NachoSoto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NachoSoto/subscriptions",
            "organizations_url": "https://api.github.com/users/NachoSoto/orgs",
            "repos_url": "https://api.github.com/users/NachoSoto/repos",
            "events_url": "https://api.github.com/users/NachoSoto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NachoSoto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 277147936,
                "node_id": "MDU6TGFiZWwyNzcxNDc5MzY=",
                "url": "https://api.github.com/repos/apple/swift/labels/bug",
                "name": "bug",
                "color": "B60205",
                "default": true,
                "description": "A deviation from expected or documented behavior. Also: expected but undesirable behavior."
            },
            {
                "id": 4816455067,
                "node_id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                "url": "https://api.github.com/repos/apple/swift/labels/triage%20needed",
                "name": "triage needed",
                "color": "ffffff",
                "default": false,
                "description": "This issue needs more specific labels"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T17:59:42Z",
        "updated_at": "2023-04-10T17:59:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "**Description**\r\nFor example:\r\n> Non-sendable type 'DispatchTimeInterval' passed in implicitly asynchronous call to main actor-isolated function cannot cross actor boundary\r\n\r\nIs there a reason why `DispatchTimeInterval` shouldn't be marked as `Sendable`? It's an immutable value type.\r\n\r\n**Environment**\r\n- Swift compiler version: 1.75.2 Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)\r\n- Xcode version: Xcode 14.3 (14E222b)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65044/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65044/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65043",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65043/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65043/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65043/events",
        "html_url": "https://github.com/apple/swift/pull/65043",
        "id": 1661109388,
        "node_id": "PR_kwDOAqwwJc5N8557",
        "number": 65043,
        "title": "[interop] make interop diagnostics more consistent with the rest of S…",
        "user": {
            "login": "hyp",
            "id": 820551,
            "node_id": "MDQ6VXNlcjgyMDU1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/820551?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hyp",
            "html_url": "https://github.com/hyp",
            "followers_url": "https://api.github.com/users/hyp/followers",
            "following_url": "https://api.github.com/users/hyp/following{/other_user}",
            "gists_url": "https://api.github.com/users/hyp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hyp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hyp/subscriptions",
            "organizations_url": "https://api.github.com/users/hyp/orgs",
            "repos_url": "https://api.github.com/users/hyp/repos",
            "events_url": "https://api.github.com/users/hyp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hyp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2011844309,
                "node_id": "MDU6TGFiZWwyMDExODQ0MzA5",
                "url": "https://api.github.com/repos/apple/swift/labels/c++%20interop",
                "name": "c++ interop",
                "color": "E99695",
                "default": false,
                "description": "Feature: Interoperability with C++"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-10T17:37:14Z",
        "updated_at": "2023-04-10T23:20:37Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65043",
            "html_url": "https://github.com/apple/swift/pull/65043",
            "diff_url": "https://github.com/apple/swift/pull/65043.diff",
            "patch_url": "https://github.com/apple/swift/pull/65043.patch",
            "merged_at": null
        },
        "body": "…wift diagnostics",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65043/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65043/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65042",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65042/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65042/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65042/events",
        "html_url": "https://github.com/apple/swift/pull/65042",
        "id": 1661077415,
        "node_id": "PR_kwDOAqwwJc5N8zJH",
        "number": 65042,
        "title": "Try reenabling runtime tests for use_os_stdlib",
        "user": {
            "login": "Catfish-Man",
            "id": 15508554,
            "node_id": "MDQ6VXNlcjE1NTA4NTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/15508554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Catfish-Man",
            "html_url": "https://github.com/Catfish-Man",
            "followers_url": "https://api.github.com/users/Catfish-Man/followers",
            "following_url": "https://api.github.com/users/Catfish-Man/following{/other_user}",
            "gists_url": "https://api.github.com/users/Catfish-Man/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Catfish-Man/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Catfish-Man/subscriptions",
            "organizations_url": "https://api.github.com/users/Catfish-Man/orgs",
            "repos_url": "https://api.github.com/users/Catfish-Man/repos",
            "events_url": "https://api.github.com/users/Catfish-Man/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Catfish-Man/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "Catfish-Man",
            "id": 15508554,
            "node_id": "MDQ6VXNlcjE1NTA4NTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/15508554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Catfish-Man",
            "html_url": "https://github.com/Catfish-Man",
            "followers_url": "https://api.github.com/users/Catfish-Man/followers",
            "following_url": "https://api.github.com/users/Catfish-Man/following{/other_user}",
            "gists_url": "https://api.github.com/users/Catfish-Man/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Catfish-Man/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Catfish-Man/subscriptions",
            "organizations_url": "https://api.github.com/users/Catfish-Man/orgs",
            "repos_url": "https://api.github.com/users/Catfish-Man/repos",
            "events_url": "https://api.github.com/users/Catfish-Man/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Catfish-Man/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Catfish-Man",
                "id": 15508554,
                "node_id": "MDQ6VXNlcjE1NTA4NTU0",
                "avatar_url": "https://avatars.githubusercontent.com/u/15508554?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Catfish-Man",
                "html_url": "https://github.com/Catfish-Man",
                "followers_url": "https://api.github.com/users/Catfish-Man/followers",
                "following_url": "https://api.github.com/users/Catfish-Man/following{/other_user}",
                "gists_url": "https://api.github.com/users/Catfish-Man/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Catfish-Man/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Catfish-Man/subscriptions",
                "organizations_url": "https://api.github.com/users/Catfish-Man/orgs",
                "repos_url": "https://api.github.com/users/Catfish-Man/repos",
                "events_url": "https://api.github.com/users/Catfish-Man/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Catfish-Man/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-10T17:07:05Z",
        "updated_at": "2023-04-10T17:07:14Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65042",
            "html_url": "https://github.com/apple/swift/pull/65042",
            "diff_url": "https://github.com/apple/swift/pull/65042.diff",
            "patch_url": "https://github.com/apple/swift/pull/65042.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65042/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65042/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65038",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65038/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65038/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65038/events",
        "html_url": "https://github.com/apple/swift/pull/65038",
        "id": 1660525955,
        "node_id": "PR_kwDOAqwwJc5N68G-",
        "number": 65038,
        "title": "🍒[5.9][Concurrency] Rename Job to ExecutorJob, ease transition with typealias ",
        "user": {
            "login": "ktoso",
            "id": 120979,
            "node_id": "MDQ6VXNlcjEyMDk3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/120979?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ktoso",
            "html_url": "https://github.com/ktoso",
            "followers_url": "https://api.github.com/users/ktoso/followers",
            "following_url": "https://api.github.com/users/ktoso/following{/other_user}",
            "gists_url": "https://api.github.com/users/ktoso/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ktoso/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ktoso/subscriptions",
            "organizations_url": "https://api.github.com/users/ktoso/orgs",
            "repos_url": "https://api.github.com/users/ktoso/repos",
            "events_url": "https://api.github.com/users/ktoso/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ktoso/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4985394180,
                "node_id": "LA_kwDOAqwwJc8AAAABKScUBA",
                "url": "https://api.github.com/repos/apple/swift/labels/%F0%9F%8D%92%20release%20cherry-pick",
                "name": "🍒 release cherry-pick",
                "color": "8E0D81",
                "default": false,
                "description": "Release branch cherry-picks"
            },
            {
                "id": 5104671690,
                "node_id": "LA_kwDOAqwwJc8AAAABMEMbyg",
                "url": "https://api.github.com/repos/apple/swift/labels/swift%205.9",
                "name": "swift 5.9",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-10T09:45:46Z",
        "updated_at": "2023-04-11T06:54:01Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65038",
            "html_url": "https://github.com/apple/swift/pull/65038",
            "diff_url": "https://github.com/apple/swift/pull/65038.diff",
            "patch_url": "https://github.com/apple/swift/pull/65038.patch",
            "merged_at": null
        },
        "body": "**Description:** According to SE review, we want to not take over the Job name. The final API we want here is `ExecutorJob` . We introduce a `typealias Job = ExecutorJob` to make the adoption easier, especially by other libraries which provide executors. We should be able to remove the `Job` typealias once all adopters have moved to `ExecutorJob`.\r\n\r\n\r\nThe respective Swift Evolution feedback from the first review round:\r\n\r\n> There was concern about the use of the common term Job as a standard library type, both because it's likely to be frequently shadowed by Job declarations in other modules, and because Job has similar connotations to Task, and the presence of Job and Task types together would be likely to confuse some developers. The Language Workgroup expects that code working with custom executors and jobs will be far less common than code that works with tasks, so giving the type a more unique and descriptive name like ExecutorJob would be appropriate. (If it were possible, the qualified name Executor.Job would be nice, but since Executor is a protocol, that would mean that every implementation of Executor would end up with a Job type nested inside it.)\r\n\r\n\r\n**Risk:** Low, existing users would have been using `UnownedJob` still; Source compatibility is improved for migration period by adding the typealias Job.\r\n**Review by:** @DougGregor\r\n**Testing:** CI testing\r\n**Original PR:**  #65006\r\n**Radar:** rdar://107826321",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65038/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65038/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65037",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65037/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65037/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65037/events",
        "html_url": "https://github.com/apple/swift/issues/65037",
        "id": 1659939362,
        "node_id": "I_kwDOAqwwJc5i8Koi",
        "number": 65037,
        "title": "Passing an optional @MainActor closure to a non @MainActor parameter causes \"compile command failed due to signal 5\"",
        "user": {
            "login": "neriusv",
            "id": 15849095,
            "node_id": "MDQ6VXNlcjE1ODQ5MDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/15849095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neriusv",
            "html_url": "https://github.com/neriusv",
            "followers_url": "https://api.github.com/users/neriusv/followers",
            "following_url": "https://api.github.com/users/neriusv/following{/other_user}",
            "gists_url": "https://api.github.com/users/neriusv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neriusv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neriusv/subscriptions",
            "organizations_url": "https://api.github.com/users/neriusv/orgs",
            "repos_url": "https://api.github.com/users/neriusv/repos",
            "events_url": "https://api.github.com/users/neriusv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neriusv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 277147936,
                "node_id": "MDU6TGFiZWwyNzcxNDc5MzY=",
                "url": "https://api.github.com/repos/apple/swift/labels/bug",
                "name": "bug",
                "color": "B60205",
                "default": true,
                "description": "A deviation from expected or documented behavior. Also: expected but undesirable behavior."
            },
            {
                "id": 4816455067,
                "node_id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                "url": "https://api.github.com/repos/apple/swift/labels/triage%20needed",
                "name": "triage needed",
                "color": "ffffff",
                "default": false,
                "description": "This issue needs more specific labels"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-09T17:02:40Z",
        "updated_at": "2023-04-09T17:02:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\n**Description**\r\nCompiling the following code with Xcode 14.3 fails with error `compile command failed due to signal 5`. \r\n\r\n```swift\r\n@MainActor\r\nclass Test {\r\n    func myFunction(closure : (@MainActor ()->())?) {\r\n        myFunction2(closure: closure)\r\n    }\r\n    \r\n    func myFunction2(closure: (()-> ())?) {\r\n        closure?()\r\n    }\r\n}\r\n```\r\nFull error:\r\n```\r\nerror: compile command failed due to signal 5 (use -v to see invocation)\r\nfromType->getCanonicalType() = (bound_generic_enum_type decl=Swift.(file).Optional\r\n  (function_type escaping global_actor=MainActor\r\n    (input=function_params num_params=0)\r\n    (output=tuple_type num_elements=0)))\r\ntoType->getCanonicalType() = (bound_generic_enum_type decl=Swift.(file).Optional\r\n  (function_type escaping\r\n    (input=function_params num_params=0)\r\n    (output=tuple_type num_elements=0)))\r\nPlease submit a bug report (https://swift.org/contributing/#reporting-bugs) and include the crash backtrace.\r\nStack dump:\r\n0.\tProgram arguments: /Applications/Xcode-RC.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c -primary-file file.swift -target arm64-apple-macosx13.0 -Xllvm -aarch64-use-tbi -enable-objc-interop -stack-check -sdk /Applications/Xcode-RC.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk -color-diagnostics -new-driver-path /Applications/Xcode-RC.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-driver -empty-abi-descriptor -resource-dir /Applications/Xcode-RC.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -module-name file -disable-clang-spi -target-sdk-version 13.3 -target-sdk-name macosx13.3 -o /var/folders/l9/khw3khf10qv4pjyc5b7kzbt00000gn/T/TemporaryDirectory.XGOlcB/file-1.o\r\n1.\tApple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)\r\n2.\tCompiling with the current language version\r\n3.\tWhile evaluating request TypeCheckSourceFileRequest(source_file \"file.swift\")\r\n4.\tWhile evaluating request TypeCheckFunctionBodyRequest(file.(file).Test.myFunction(closure:)@file.swift:4:10)\r\n5.\tWhile type-checking statement at [file.swift:4:53 - line:6:5] RangeText=\"{\r\n        myFunction2(closure: closure)\r\n    \"\r\n6.\tWhile type-checking expression at [file.swift:5:9 - line:5:37] RangeText=\"myFunction2(closure: closure\"\r\n7.\tWhile type-checking-target starting at file.swift:5:9\r\nStack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):\r\n0  swift-frontend           0x00000001054d7300 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56\r\n1  swift-frontend           0x00000001054d62e4 llvm::sys::RunSignalHandlers() + 112\r\n2  swift-frontend           0x00000001054d7910 SignalHandler(int) + 344\r\n3  libsystem_platform.dylib 0x000000018a83ea84 _sigtramp + 56\r\n4  swift-frontend           0x000000010133b7f8 (anonymous namespace)::ExprRewriter::coerceToType(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder, llvm::Optional<swift::Pattern*>) + 8832\r\n5  swift-frontend           0x000000010134c544 (anonymous namespace)::ExprRewriter::coerceCallArguments(swift::ArgumentList*, swift::AnyFunctionType*, swift::ConcreteDeclRef, swift::ApplyExpr*, swift::constraints::ConstraintLocatorBuilder, llvm::ArrayRef<swift::AppliedPropertyWrapper>) + 6216\r\n6  swift-frontend           0x0000000101356878 (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder, swift::constraints::ConstraintLocatorBuilder) + 6284\r\n7  swift-frontend           0x000000010135d894 (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) + 440\r\n8  swift-frontend           0x0000000101340544 (anonymous namespace)::ExprRewriter::walkToExprPost(swift::Expr*) + 120\r\n9  swift-frontend           0x000000010133cd54 (anonymous namespace)::ExprWalker::walkToExprPost(swift::Expr*) + 24\r\n10 swift-frontend           0x0000000101337aec (anonymous namespace)::ExprWalker::rewriteTarget(swift::constraints::SolutionApplicationTarget) + 2768\r\n11 swift-frontend           0x0000000101336b30 swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::constraints::SolutionApplicationTarget) + 7264\r\n12 swift-frontend           0x00000001015bfe30 swift::TypeChecker::typeCheckTarget(swift::constraints::SolutionApplicationTarget&, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>) + 708\r\n13 swift-frontend           0x00000001015bfa38 swift::TypeChecker::typeCheckExpression(swift::constraints::SolutionApplicationTarget&, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>) + 400\r\n14 swift-frontend           0x00000001016ae1cc (anonymous namespace)::StmtChecker::typeCheckASTNode(swift::ASTNode&) + 384\r\n15 swift-frontend           0x00000001016b1ffc swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) + 292\r\n16 swift-frontend           0x00000001016b0810 bool (anonymous namespace)::StmtChecker::typeCheckStmt<swift::BraceStmt>(swift::BraceStmt*&) + 320\r\n17 swift-frontend           0x00000001016af5a0 swift::TypeCheckFunctionBodyRequest::evaluate(swift::Evaluator&, swift::AbstractFunctionDecl*) const + 1900\r\n18 swift-frontend           0x0000000101a9f424 llvm::Expected<swift::TypeCheckFunctionBodyRequest::OutputType> swift::Evaluator::getResultUncached<swift::TypeCheckFunctionBodyRequest>(swift::TypeCheckFunctionBodyRequest const&) + 676\r\n19 swift-frontend           0x0000000101a2c944 swift::TypeCheckFunctionBodyRequest::OutputType swift::evaluateOrDefault<swift::TypeCheckFunctionBodyRequest>(swift::Evaluator&, swift::TypeCheckFunctionBodyRequest, swift::TypeCheckFunctionBodyRequest::OutputType) + 92\r\n20 swift-frontend           0x00000001016f2a10 swift::TypeCheckSourceFileRequest::evaluate(swift::Evaluator&, swift::SourceFile*) const + 1092\r\n21 swift-frontend           0x00000001016f7a48 llvm::Expected<swift::TypeCheckSourceFileRequest::OutputType> swift::Evaluator::getResultUncached<swift::TypeCheckSourceFileRequest>(swift::TypeCheckSourceFileRequest const&) + 680\r\n22 swift-frontend           0x00000001016f770c llvm::Expected<swift::TypeCheckSourceFileRequest::OutputType> swift::Evaluator::getResultCached<swift::TypeCheckSourceFileRequest, (void*)0>(swift::TypeCheckSourceFileRequest const&) + 240\r\n23 swift-frontend           0x00000001016f2564 swift::performTypeChecking(swift::SourceFile&) + 88\r\n24 swift-frontend           0x00000001005615e8 swift::CompilerInstance::performSema() + 236\r\n25 swift-frontend           0x00000001003c7fb0 performCompile(swift::CompilerInstance&, int&, swift::FrontendObserver*) + 464\r\n26 swift-frontend           0x00000001003c6944 swift::performFrontend(llvm::ArrayRef<char const*>, char const*, void*, swift::FrontendObserver*) + 4308\r\n27 swift-frontend           0x000000010038b68c swift::mainEntry(int, char const**) + 4116\r\n28 dyld                     0x000000018a4b7f28 start + 2236\r\n```\r\n\r\n\r\n**Steps to reproduce**\r\nCompiling the code by running `swiftc code.swift`\r\n\r\n**Expected behavior**\r\nCompile successfuly\r\n\r\n**Environment**\r\n- Swift compiler version info `swift-driver version: 1.75.2 Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)\r\nTarget: arm64-apple-macosx13.0`\r\n- Xcode version info `Xcode 14.3\r\nBuild version 14E222b`\r\n\r\nCompiles successfully on Xcode 14.2\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65037/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65037/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65035",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65035/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65035/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65035/events",
        "html_url": "https://github.com/apple/swift/issues/65035",
        "id": 1659880476,
        "node_id": "I_kwDOAqwwJc5i78Qc",
        "number": 65035,
        "title": "Default arguments cannot be used if they would define another generic parameter's type.",
        "user": {
            "login": "JessyCatterwaul",
            "id": 8386742,
            "node_id": "MDQ6VXNlcjgzODY3NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8386742?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JessyCatterwaul",
            "html_url": "https://github.com/JessyCatterwaul",
            "followers_url": "https://api.github.com/users/JessyCatterwaul/followers",
            "following_url": "https://api.github.com/users/JessyCatterwaul/following{/other_user}",
            "gists_url": "https://api.github.com/users/JessyCatterwaul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JessyCatterwaul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JessyCatterwaul/subscriptions",
            "organizations_url": "https://api.github.com/users/JessyCatterwaul/orgs",
            "repos_url": "https://api.github.com/users/JessyCatterwaul/repos",
            "events_url": "https://api.github.com/users/JessyCatterwaul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JessyCatterwaul/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 277147936,
                "node_id": "MDU6TGFiZWwyNzcxNDc5MzY=",
                "url": "https://api.github.com/repos/apple/swift/labels/bug",
                "name": "bug",
                "color": "B60205",
                "default": true,
                "description": "A deviation from expected or documented behavior. Also: expected but undesirable behavior."
            },
            {
                "id": 4067773055,
                "node_id": "LA_kwDOAqwwJc7ydUp_",
                "url": "https://api.github.com/repos/apple/swift/labels/compiler",
                "name": "compiler",
                "color": "fad599",
                "default": false,
                "description": "The Swift compiler in itself"
            },
            {
                "id": 4067774892,
                "node_id": "LA_kwDOAqwwJc7ydVGs",
                "url": "https://api.github.com/repos/apple/swift/labels/type%20checker",
                "name": "type checker",
                "color": "fe47ef",
                "default": false,
                "description": ""
            },
            {
                "id": 4068290532,
                "node_id": "LA_kwDOAqwwJc7yfS_k",
                "url": "https://api.github.com/repos/apple/swift/labels/generics",
                "name": "generics",
                "color": "E99695",
                "default": false,
                "description": "Feature: generic declarations and types"
            },
            {
                "id": 4768091662,
                "node_id": "LA_kwDOAqwwJc8AAAABHDNODg",
                "url": "https://api.github.com/repos/apple/swift/labels/type%20inference",
                "name": "type inference",
                "color": "E99695",
                "default": false,
                "description": "Feature: type inference"
            },
            {
                "id": 4834600811,
                "node_id": "LA_kwDOAqwwJc8AAAABIConaw",
                "url": "https://api.github.com/repos/apple/swift/labels/default%20arguments",
                "name": "default arguments",
                "color": "E99695",
                "default": false,
                "description": "Feature: default arguments for value parameters"
            },
            {
                "id": 5104671690,
                "node_id": "LA_kwDOAqwwJc8AAAABMEMbyg",
                "url": "https://api.github.com/repos/apple/swift/labels/swift%205.9",
                "name": "swift 5.9",
                "color": "D93F0B",
                "default": false,
                "description": ""
            },
            {
                "id": 5164487048,
                "node_id": "LA_kwDOAqwwJc8AAAABM9PRiA",
                "url": "https://api.github.com/repos/apple/swift/labels/unexpected%20error",
                "name": "unexpected error",
                "color": "B60205",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-09T13:43:03Z",
        "updated_at": "2023-04-10T17:00:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Given \r\n\r\n```swift\r\nprotocol Protocol {\r\n  var property: Never { get }\r\n}\r\n```\r\n\r\nThis should be expressible as: \r\n\r\n```swift\r\nfunc ƒ<Instance: Protocol, Property>(\r\n  instance: Instance,\r\n  property: (Instance) -> Property = \\.property // Cannot use default expression for inference of '(Instance) -> Property' because it is inferrable from parameters #0, #1\r\n) {\r\n  _ = property(instance)\r\n}\r\n```\r\n\r\n…but that error occurs instead.\r\n\r\n---\r\n\r\nWorkaround 1—Explicit Overloads:\r\n\r\n```swift\r\nfunc ƒ<Instance: Protocol, Property>(\r\n  instance: Instance,\r\n  property: (Instance) -> Property\r\n) {\r\n  _ = property(instance)\r\n}\r\n\r\nfunc ƒ<Instance: Protocol>(instance: Instance) {\r\n  _ = instance.property\r\n}\r\n```\r\n\r\n(Somewhat inequivalent) Workaround 2—Existential:\r\n\r\n```swift\r\nfunc ƒ<Instance: Protocol, Property>(\r\n  instance: Instance,\r\n  property: (any Protocol) -> Property = \\.property\r\n) {\r\n  _ = property(instance)\r\n}\r\n```\r\n\r\n---\r\n\r\nNote: it's not necessary for a closure to be involved.\r\n\r\n```swift\r\nfunc ƒ<T>(\r\n  _: T,\r\n  _: T = () // Cannot use default expression for inference of 'T' because it is inferrable from parameters #0, #1\r\n) { }\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65035/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65035/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65034",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65034/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65034/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65034/events",
        "html_url": "https://github.com/apple/swift/issues/65034",
        "id": 1659800965,
        "node_id": "I_kwDOAqwwJc5i7o2F",
        "number": 65034,
        "title": "Enabling upcoming feature `ExistentialAny` does not work for standard library protocols.",
        "user": {
            "login": "ensan-hcl",
            "id": 63481257,
            "node_id": "MDQ6VXNlcjYzNDgxMjU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/63481257?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ensan-hcl",
            "html_url": "https://github.com/ensan-hcl",
            "followers_url": "https://api.github.com/users/ensan-hcl/followers",
            "following_url": "https://api.github.com/users/ensan-hcl/following{/other_user}",
            "gists_url": "https://api.github.com/users/ensan-hcl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ensan-hcl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ensan-hcl/subscriptions",
            "organizations_url": "https://api.github.com/users/ensan-hcl/orgs",
            "repos_url": "https://api.github.com/users/ensan-hcl/repos",
            "events_url": "https://api.github.com/users/ensan-hcl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ensan-hcl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 277147936,
                "node_id": "MDU6TGFiZWwyNzcxNDc5MzY=",
                "url": "https://api.github.com/repos/apple/swift/labels/bug",
                "name": "bug",
                "color": "B60205",
                "default": true,
                "description": "A deviation from expected or documented behavior. Also: expected but undesirable behavior."
            },
            {
                "id": 4816455067,
                "node_id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                "url": "https://api.github.com/repos/apple/swift/labels/triage%20needed",
                "name": "triage needed",
                "color": "ffffff",
                "default": false,
                "description": "This issue needs more specific labels"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-09T08:47:03Z",
        "updated_at": "2023-04-09T08:47:03Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "<!--\r\nThis repository tracks issues related to the implementation of the Swift\r\ncompiler, standard library, runtime, and tools that provide IDE support for\r\nSwift (e.g. code completion). If the bug relates to the implementation of a\r\nproprietary (closed-source) Apple framework such as UIKit, SwiftUI, Combine,\r\netc., please report it to https://feedbackassistant.apple.com instead.\r\n-->\r\n\r\n**Description**\r\n<!-- Describe clearly and concisely what the bug is. -->\r\nEnabling upcoming feature `ExistentialAny` does not work for standard library protocols.\r\n\r\nFor example, it should produce a compile error, considering `Decoder` is a bare protocol. However, the compiler does not produce any error or warning, even though for other non-standard library protocols it produces errors and warnings correctly.\r\n```\r\ninit(from decoder: Decoder) throws { /* ... */ }\r\n```\r\n\r\n**Steps to reproduce**\r\n<!--\r\nExplain how to reproduce the problem (in steps if seen fit) and include either\r\nan inline test case (preferred) or a project that reproduces it. Consider\r\nreducing the sample to the smallest amount of code possible — a smaller test\r\ncase is easier to reason about and more appealing to сontributors.\r\n-->\r\n1. `swift repl -enable-upcoming-feature ExistentialAny`\r\n2. put following;\r\n```swift\r\nprotocol P {}\r\nextension Int: P {}\r\n```\r\n3. put following:\r\n```swift\r\nlet value: P = 42\r\n```\r\nIt produces an error\r\n```\r\nexpression failed to parse:\r\nerror: repl.swift:5:12: error: use of protocol 'P' as a type must be written 'any P'\r\nlet value: P = 42\r\n           ^\r\n           any P\r\n```\r\n4. put following;\r\n```swift\r\nlet value: Codable = 42\r\n```\r\nIt works!\r\n\r\n**Expected behavior**\r\n`Codable` should also produce a compile error, but it doesn't.\r\n<!-- Describe what you expected to happen. -->\r\n\r\n<!-- If deemed helpful, add screenshots that showcase the problem. -->\r\n<!-- **Screenshots** -->\r\n\r\n<!--\r\nInclude information about the Swift compiler version and, if applicable, the\r\nXcode version you are observing the problem in and the deployment target.\r\n-->\r\n**Environment**\r\n- Swift compiler version info \r\n  ```\r\n  swiftc -version\r\n  swift-driver version: 1.75.2 Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)\r\n  Target: x86_64-apple-macosx13.0\r\n  ```\r\n- Xcode version info <!-- replace with the output of 'xcodebuild -version' -->\r\n   ```\r\n   Xcode 14.3\r\n   Build version 14E222b\r\n   ```\r\n- Deployment target: N/A\r\n\r\n<!-- Add any other context about the problem as appropriate. -->\r\n<!-- **Additional context** -->\r\nAs I checked, it seems `any P` check is not working for standard library protocols without associated types including `Codable`, `Decoder`, `Encoder`, `CustomStringConvertible`, `CustomDebugStringConvertible`, `ExpressibleBy*Literal`, and so on.\r\n\r\nForum thread: https://forums.swift.org/t/any-p-check-doesnt-work-for-standard-library-protocols/64276",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65034/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65034/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65032",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65032/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65032/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65032/events",
        "html_url": "https://github.com/apple/swift/pull/65032",
        "id": 1659730595,
        "node_id": "PR_kwDOAqwwJc5N4c8g",
        "number": 65032,
        "title": "[Macros] Mangle attached macro expansions based only on syntactic information",
        "user": {
            "login": "DougGregor",
            "id": 989428,
            "node_id": "MDQ6VXNlcjk4OTQyOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/989428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DougGregor",
            "html_url": "https://github.com/DougGregor",
            "followers_url": "https://api.github.com/users/DougGregor/followers",
            "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
            "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
            "organizations_url": "https://api.github.com/users/DougGregor/orgs",
            "repos_url": "https://api.github.com/users/DougGregor/repos",
            "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DougGregor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-09T03:12:06Z",
        "updated_at": "2023-04-11T11:41:42Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65032",
            "html_url": "https://github.com/apple/swift/pull/65032",
            "diff_url": "https://github.com/apple/swift/pull/65032.diff",
            "patch_url": "https://github.com/apple/swift/pull/65032.patch",
            "merged_at": null
        },
        "body": "The mangling of attached macro expansions based on the declaration to which they are attached requires semantic information (specifically, the interface type of that declaration) that caused cyclic dependencies during type checking. Replace the mangling with a less-complete mangling that only requires syntactic information from the declaration, i.e., the name of the declaration to which the macro was attached.\r\n\r\nThis eliminates reference cycles that occur with attached macros that produce arbitrary names.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65032/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65032/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65030",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65030/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65030/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65030/events",
        "html_url": "https://github.com/apple/swift/pull/65030",
        "id": 1659689006,
        "node_id": "PR_kwDOAqwwJc5N4VHx",
        "number": 65030,
        "title": "[Linux] (Cherry Pick) Merge pull request #64633 from gwynne/patch-2-5.9",
        "user": {
            "login": "gwynne",
            "id": 1130717,
            "node_id": "MDQ6VXNlcjExMzA3MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1130717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gwynne",
            "html_url": "https://github.com/gwynne",
            "followers_url": "https://api.github.com/users/gwynne/followers",
            "following_url": "https://api.github.com/users/gwynne/following{/other_user}",
            "gists_url": "https://api.github.com/users/gwynne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gwynne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gwynne/subscriptions",
            "organizations_url": "https://api.github.com/users/gwynne/orgs",
            "repos_url": "https://api.github.com/users/gwynne/repos",
            "events_url": "https://api.github.com/users/gwynne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gwynne/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-09T00:33:20Z",
        "updated_at": "2023-04-09T00:33:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65030",
            "html_url": "https://github.com/apple/swift/pull/65030",
            "diff_url": "https://github.com/apple/swift/pull/65030.diff",
            "patch_url": "https://github.com/apple/swift/pull/65030.patch",
            "merged_at": null
        },
        "body": "Add the remaining toolchain-distributed runtime libs to autolink-extract. Cherry pick of #64312 via #64633.\r\n\r\n(Hoping to get this into 5.8.1 if one ends up getting made.)",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65030/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65030/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65029",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65029/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65029/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65029/events",
        "html_url": "https://github.com/apple/swift/pull/65029",
        "id": 1659601851,
        "node_id": "PR_kwDOAqwwJc5N4Ge7",
        "number": 65029,
        "title": "[5.9][Completion] Only provide macro completions when they are valid",
        "user": {
            "login": "bnbarham",
            "id": 1628798,
            "node_id": "MDQ6VXNlcjE2Mjg3OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1628798?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bnbarham",
            "html_url": "https://github.com/bnbarham",
            "followers_url": "https://api.github.com/users/bnbarham/followers",
            "following_url": "https://api.github.com/users/bnbarham/following{/other_user}",
            "gists_url": "https://api.github.com/users/bnbarham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bnbarham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bnbarham/subscriptions",
            "organizations_url": "https://api.github.com/users/bnbarham/orgs",
            "repos_url": "https://api.github.com/users/bnbarham/repos",
            "events_url": "https://api.github.com/users/bnbarham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bnbarham/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5104671690,
                "node_id": "LA_kwDOAqwwJc8AAAABMEMbyg",
                "url": "https://api.github.com/repos/apple/swift/labels/swift%205.9",
                "name": "swift 5.9",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-08T18:12:48Z",
        "updated_at": "2023-04-10T16:40:47Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apple/swift/pulls/65029",
            "html_url": "https://github.com/apple/swift/pull/65029",
            "diff_url": "https://github.com/apple/swift/pull/65029.diff",
            "patch_url": "https://github.com/apple/swift/pull/65029.patch",
            "merged_at": null
        },
        "body": "* Explanation: Updates completion to only provide macros when they're valid. Also provides macros in a few positions they were missing previously.\r\n* Scope:  Clients of completion.\r\n* Risk: Low; macros is a new feature, this updates completion functionality to better support them\r\n* Testing: New suite of macro tests for each role and the position they can be in.\r\n* Original PRs: https://github.com/apple/swift/pull/64986 and https://github.com/apple/swift/pull/65036",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65029/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65029/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65028",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65028/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65028/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65028/events",
        "html_url": "https://github.com/apple/swift/issues/65028",
        "id": 1659597491,
        "node_id": "I_kwDOAqwwJc5i63Kz",
        "number": 65028,
        "title": "Ubuntu 23.04 + Swift 5.8: Fails to compile bootstrap1 modules due to possible module map issues with CXX interop",
        "user": {
            "login": "jaredjones",
            "id": 1316894,
            "node_id": "MDQ6VXNlcjEzMTY4OTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1316894?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jaredjones",
            "html_url": "https://github.com/jaredjones",
            "followers_url": "https://api.github.com/users/jaredjones/followers",
            "following_url": "https://api.github.com/users/jaredjones/following{/other_user}",
            "gists_url": "https://api.github.com/users/jaredjones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jaredjones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jaredjones/subscriptions",
            "organizations_url": "https://api.github.com/users/jaredjones/orgs",
            "repos_url": "https://api.github.com/users/jaredjones/repos",
            "events_url": "https://api.github.com/users/jaredjones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jaredjones/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 277147936,
                "node_id": "MDU6TGFiZWwyNzcxNDc5MzY=",
                "url": "https://api.github.com/repos/apple/swift/labels/bug",
                "name": "bug",
                "color": "B60205",
                "default": true,
                "description": "A deviation from expected or documented behavior. Also: expected but undesirable behavior."
            },
            {
                "id": 4816455067,
                "node_id": "LA_kwDOAqwwJc8AAAABHxVFmw",
                "url": "https://api.github.com/repos/apple/swift/labels/triage%20needed",
                "name": "triage needed",
                "color": "ffffff",
                "default": false,
                "description": "This issue needs more specific labels"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-08T17:57:07Z",
        "updated_at": "2023-04-08T18:18:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Description**\r\nUbuntu 23.04 + Swift 5.8: Fails to compile bootstrap1 modules due to possible module map issues with CXX interop\r\n\r\nWhen compiling Swift from source with `--bootstrapping=bootstrapping`, compilation fails during generation of modules. Specifically on the Basic module.\r\n\r\n**Steps to reproduce**\r\n1. Download Ubuntu 23.04, which is currently in beta but also in feature freeze so its ABI stable at this point.\r\n2. Install Swift dependencies as listed in the documentation\r\n3. Construct a swift source root by running:\r\n`./swift/utils/update-checkout --clone --tag swift-5.8-RELEASE`\r\n4. Invoke the `build-script` as follows:\r\n```\r\nexport SCCACHE_CACHE_SIZE=\"50G\" && ./swift/utils/build-script -R --swift-install-components=\"autolink-driver;compiler;clang-resource-dir-symlink;stdlib;swift-remote-mirror;sdk-overlay;static-mirror-lib;toolchain-tools;license;sourcekit-inproc\" --llvm-install-components=\"llvm-ar;llvm-cov;llvm-profdata;IndexStore;clang;clang-resource-headers;compiler-rt;clangd;lld;LTO;clang-features-file\" --lldb --build-lld=1 --build-ninja=1 --llbuild=1 --libcxx=1 --swiftpm=1 --foundation=1 --libdispatch=1 --indexstore-db=1 --libicu=1 --install-swiftpm=1 --build-swift-static-stdlib --build-swift-static-sdk-overlay --install-llvm=1 --install-swift=1 --install-foundation --install-libdispatch --swiftdocc=1 -j=8 --sccache=1 --skip-test-linux=1 --skip-build-benchmarks --skip-early-swift-driver --skip-early-swiftsyntax --bootstrapping=bootstrapping --install-destdir=/home/jjones/swift-install\r\n```\r\n\r\n**Expected behavior**\r\nBootstrap compilation should succeed, however a failure occurs when `swiftc` is invoked and has to deal with `cxx-interop`.\r\n\r\n**Build Failure**\r\n```\r\n[1216/1439][ 84%][321.279s] Building swift module Basic\r\nFAILED: bootstrapping1/SwiftCompilerSources/Basic.o /home/jjones/swift-source-root/build/Ninja-ReleaseAssert/swift-linux-x86_64/bootstrapping1/SwiftCompilerSources/Basic.o\r\ncd /home/jjones/swift-source-root/swift/SwiftCompilerSources && /home/jjones/swift-source-root/build/Ninja-ReleaseAssert/swift-linux-x86_64/bootstrapping0/bin/swiftc -c -o /home/jjones/swift-source-root/build/Ninja-ReleaseAssert/swift-linux-x86_64/bootstrapping1/SwiftCompilerSources/Basic.o -I /home/jjones/swift-source-root/build/Ninja-ReleaseAssert/swift-linux-x86_64/bootstrapping0/bin/../lib -I /usr/lib -target x86_64-unknown-linux-gnu -module-name Basic -emit-module -emit-module-path /home/jjones/swift-source-root/build/Ninja-ReleaseAssert/swift-linux-x86_64/bootstrapping1/SwiftCompilerSources/Basic.swiftmodule -parse-as-library /home/jjones/swift-source-root/swift/SwiftCompilerSources/Sources/Basic/SourceLoc.swift /home/jjones/swift-source-root/swift/SwiftCompilerSources/Sources/Basic/Utils.swift -wmo -Xfrontend -validate-tbd-against-ir=none -Xfrontend -enable-experimental-cxx-interop -Xcc -UIBOutlet -Xcc -UIBAction -Xcc -UIBInspectable -Xfrontend -disable-implicit-string-processing-module-import -O -cross-module-optimization -Xcc -I -Xcc /home/jjones/swift-source-root/llvm-project/llvm/include -Xcc -I -Xcc /home/jjones/swift-source-root/build/Ninja-ReleaseAssert/llvm-linux-x86_64/include -Xcc -I -Xcc /home/jjones/swift-source-root/llvm-project/clang/include -Xcc -I -Xcc /home/jjones/swift-source-root/build/Ninja-ReleaseAssert/llvm-linux-x86_64/tools/clang/include -Xcc -I -Xcc /home/jjones/swift-source-root/swift/include -Xcc -I -Xcc /home/jjones/swift-source-root/build/Ninja-ReleaseAssert/swift-linux-x86_64/SwiftCompilerSources/../include -I /home/jjones/swift-source-root/build/Ninja-ReleaseAssert/swift-linux-x86_64/bootstrapping1/SwiftCompilerSources\r\n<unknown>:0: warning: unable to perform implicit import of \"_Concurrency\" module: no such module found\r\n/home/jjones/swift-source-root/swift/include/swift/AST/ClangModuleLoader.h:19:10: note: while building module 'Clang_AST' imported from /home/jjones/swift-source-root/swift/include/swift/AST/ClangModuleLoader.h:19:\r\n#include \"clang/AST/DeclTemplate.h\"\r\n         ^\r\n/home/jjones/swift-source-root/llvm-project/clang/include/clang/AST/APValue.h:16:10: note: while building module 'Clang_Basic' imported from /home/jjones/swift-source-root/llvm-project/clang/include/clang/AST/APValue.h:16:\r\n#include \"clang/Basic/LLVM.h\"\r\n         ^\r\n/home/jjones/swift-source-root/llvm-project/clang/include/clang/Basic/Sanitizers.h:20:10: note: while building module 'LLVM_Transforms' imported from /home/jjones/swift-source-root/llvm-project/clang/include/clang/Basic/Sanitizers.h:20:\r\n#include \"llvm/Transforms/Instrumentation/AddressSanitizerOptions.h\"\r\n         ^\r\n/home/jjones/swift-source-root/llvm-project/llvm/include/llvm/Transforms/AggressiveInstCombine/AggressiveInstCombine.h:20:10: note: while building module 'LLVM_intrinsic_gen' imported from /home/jjones/swift-source-root/llvm-project/llvm/include/llvm/Transforms/AggressiveInstCombine/AggressiveInstCombine.h:20:\r\n#include \"llvm/IR/PassManager.h\"\r\n         ^\r\n<module-includes>:1:10: note: in file included from <module-includes>:1:\r\n#include \"IR/Argument.h\"\r\n         ^\r\n/home/jjones/swift-source-root/llvm-project/llvm/include/llvm/IR/Argument.h:17:10: note: in file included from /home/jjones/swift-source-root/llvm-project/llvm/include/llvm/IR/Argument.h:17:\r\n#include \"llvm/IR/Attributes.h\"\r\n         ^\r\n/home/jjones/swift-source-root/llvm-project/llvm/include/llvm/IR/Attributes.h:31:10: note: in file included from /home/jjones/swift-source-root/llvm-project/llvm/include/llvm/IR/Attributes.h:31:\r\n#include <set>\r\n         ^\r\n/usr/lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/set:60:10: note: in file included from /usr/lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/set:60:\r\n#include <bits/stl_tree.h>\r\n         ^\r\n/usr/lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/bits/stl_tree.h:2008:5: error: missing '#include \"gcc/x86_64-linux-gnu/12/../../../../include/c++/12/bits/stl_pair.h\"'; 'pair' must be declared before it is used\r\n    pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,\r\n    ^\r\n/usr/lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/bits/stl_pair.h:185:12: note: declaration here is not visible\r\n    struct pair\r\n```\r\n\r\n**Environment**\r\n- Swift compiler: swift-5.8-RELEASE\r\n- OS: Ubuntu 23.04\r\n\r\n<!-- **Additional context** -->\r\nThe full build-log is attached.\r\n[swift_build_failure.txt](https://github.com/apple/swift/files/11183814/swift_build_failure.txt)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65028/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65028/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65027",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65027/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65027/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65027/events",
        "html_url": "https://github.com/apple/swift/issues/65027",
        "id": 1659522802,
        "node_id": "I_kwDOAqwwJc5i6k7y",
        "number": 65027,
        "title": "The suggested fix for the protocol composition type is incorrect when enable upcoming feature`ExistentialAny`",
        "user": {
            "login": "treastrain",
            "id": 13805382,
            "node_id": "MDQ6VXNlcjEzODA1Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13805382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/treastrain",
            "html_url": "https://github.com/treastrain",
            "followers_url": "https://api.github.com/users/treastrain/followers",
            "following_url": "https://api.github.com/users/treastrain/following{/other_user}",
            "gists_url": "https://api.github.com/users/treastrain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/treastrain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/treastrain/subscriptions",
            "organizations_url": "https://api.github.com/users/treastrain/orgs",
            "repos_url": "https://api.github.com/users/treastrain/repos",
            "events_url": "https://api.github.com/users/treastrain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/treastrain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 277147936,
                "node_id": "MDU6TGFiZWwyNzcxNDc5MzY=",
                "url": "https://api.github.com/repos/apple/swift/labels/bug",
                "name": "bug",
                "color": "B60205",
                "default": true,
                "description": "A deviation from expected or documented behavior. Also: expected but undesirable behavior."
            },
            {
                "id": 4067773055,
                "node_id": "LA_kwDOAqwwJc7ydUp_",
                "url": "https://api.github.com/repos/apple/swift/labels/compiler",
                "name": "compiler",
                "color": "fad599",
                "default": false,
                "description": "The Swift compiler in itself"
            },
            {
                "id": 4067774889,
                "node_id": "LA_kwDOAqwwJc7ydVGp",
                "url": "https://api.github.com/repos/apple/swift/labels/diagnostics%20QoI",
                "name": "diagnostics QoI",
                "color": "8d404a",
                "default": false,
                "description": "Diagnostics Quality of Implementation"
            },
            {
                "id": 4067774892,
                "node_id": "LA_kwDOAqwwJc7ydVGs",
                "url": "https://api.github.com/repos/apple/swift/labels/type%20checker",
                "name": "type checker",
                "color": "fe47ef",
                "default": false,
                "description": ""
            },
            {
                "id": 4067825153,
                "node_id": "LA_kwDOAqwwJc7ydhYB",
                "url": "https://api.github.com/repos/apple/swift/labels/fix-its",
                "name": "fix-its",
                "color": "E99695",
                "default": false,
                "description": "Feature: diagnostic fix-its"
            },
            {
                "id": 4834551886,
                "node_id": "LA_kwDOAqwwJc8AAAABICloTg",
                "url": "https://api.github.com/repos/apple/swift/labels/existentials",
                "name": "existentials",
                "color": "E99695",
                "default": false,
                "description": "Feature: values of \"any\" types (e.g. \"any Collection\") aka type-erased values"
            },
            {
                "id": 4987115366,
                "node_id": "LA_kwDOAqwwJc8AAAABKUFXZg",
                "url": "https://api.github.com/repos/apple/swift/labels/swift%205.8",
                "name": "swift 5.8",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "AnthonyLatsis",
            "id": 17835512,
            "node_id": "MDQ6VXNlcjE3ODM1NTEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/17835512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AnthonyLatsis",
            "html_url": "https://github.com/AnthonyLatsis",
            "followers_url": "https://api.github.com/users/AnthonyLatsis/followers",
            "following_url": "https://api.github.com/users/AnthonyLatsis/following{/other_user}",
            "gists_url": "https://api.github.com/users/AnthonyLatsis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AnthonyLatsis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AnthonyLatsis/subscriptions",
            "organizations_url": "https://api.github.com/users/AnthonyLatsis/orgs",
            "repos_url": "https://api.github.com/users/AnthonyLatsis/repos",
            "events_url": "https://api.github.com/users/AnthonyLatsis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AnthonyLatsis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "AnthonyLatsis",
                "id": 17835512,
                "node_id": "MDQ6VXNlcjE3ODM1NTEy",
                "avatar_url": "https://avatars.githubusercontent.com/u/17835512?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/AnthonyLatsis",
                "html_url": "https://github.com/AnthonyLatsis",
                "followers_url": "https://api.github.com/users/AnthonyLatsis/followers",
                "following_url": "https://api.github.com/users/AnthonyLatsis/following{/other_user}",
                "gists_url": "https://api.github.com/users/AnthonyLatsis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/AnthonyLatsis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AnthonyLatsis/subscriptions",
                "organizations_url": "https://api.github.com/users/AnthonyLatsis/orgs",
                "repos_url": "https://api.github.com/users/AnthonyLatsis/repos",
                "events_url": "https://api.github.com/users/AnthonyLatsis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/AnthonyLatsis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-08T13:23:52Z",
        "updated_at": "2023-04-09T22:27:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Description**\r\nIn Swift 5.8, [SE-0335 \"Introduce existential any\"](https://github.com/apple/swift-evolution/blob/main/proposals/0335-existential-any.md) can be enabled by [SE-0362 \"Piecemeal adoption of upcoming language improvements\"](https://github.com/apple/swift-evolution/blob/main/proposals/0362-piecemeal-future-features.md). In that case, if the existential type is not given the `any` keyword, it causes a build error.\r\n\r\nThat build error contains a suggested fix, but it suggests a fix that seems incorrect when using protocol composition types.\r\n\r\n\r\n**Steps to reproduce**\r\n1. Create a Swift Package and open it Xcode 14.3.\r\n```bash\r\n% mkdir ExistentialAnySample\r\n\r\n% cd ExistentialAnySample\r\n\r\n% swift package init --type executable\r\nCreating executable package: ExistentialAnySample\r\nCreating Package.swift\r\nCreating .gitignore\r\nCreating Sources/\r\nCreating Sources/main.swift\r\n\r\n% xed .\r\n```\r\n\r\n2. Enable upcoming feature `ExistentialAny`.\r\n```swift:Package.swift\r\n// swift-tools-version: 5.8\r\n\r\nimport PackageDescription\r\n\r\nlet package = Package(\r\n    name: \"ExistentialAnySample\",\r\n    targets: [\r\n        .executableTarget(\r\n            name: \"ExistentialAnySample\",\r\n            path: \"Sources\",\r\n            swiftSettings: [\r\n                .enableUpcomingFeature(\"ExistentialAny\"),\r\n            ]),\r\n    ]\r\n)\r\n```\r\n\r\n3. Write the following code in `main.swift` and build it (we will get some errors).\r\n```swift:main.swift\r\n//\r\n//  main.swift\r\n//  ExistentialAnySample\r\n//\r\n//  Created by treastrain on 2023/04/08.\r\n//\r\n\r\nclass C {}\r\nprotocol P {}\r\nprotocol Q {}\r\n\r\nfunc f1(_ v: C & P) {} // ❌ Use of protocol 'P' as a type must be written 'any P'\r\n\r\nfunc f2(_ v: P & Q) {} // ❌ Use of protocol 'P' as a type must be written 'any P'\r\n                       // ❌ Use of protocol 'Q' as a type must be written 'any Q'\r\n```\r\n![](https://user-images.githubusercontent.com/13805382/230723075-c3290060-afc5-440d-a841-9f6048ab7c93.png)\r\n\r\n4. In the Xcode menu bar, \"Editor\" > \"Fix all issues (Cmd + Ctrl + Option + F)\".\r\n\r\n5. The error continues and the build fails.\r\n\r\n![](https://user-images.githubusercontent.com/13805382/230723236-c4645b51-aa28-4cee-9212-4d5aeef45e35.png)\r\n\r\n**Expected behavior**\r\nAfter \"Fix all issues (Cmd + Ctrl + Option + F)\", `C & P` should be replaced with `any C & P`, and `P & Q` should be replaced with `any P & Q` in one shot.\r\n\r\n**Environment**\r\n- Swift compiler version info `swift-driver version: 1.75.2 Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100) Target: arm64-apple-macosx13.0`\r\n- Xcode version info `Xcode 14.3 Build version 14E222b`\r\n- Deployment target: iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65027/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65027/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/apple/swift/issues/65026",
        "repository_url": "https://api.github.com/repos/apple/swift",
        "labels_url": "https://api.github.com/repos/apple/swift/issues/65026/labels{/name}",
        "comments_url": "https://api.github.com/repos/apple/swift/issues/65026/comments",
        "events_url": "https://api.github.com/repos/apple/swift/issues/65026/events",
        "html_url": "https://github.com/apple/swift/issues/65026",
        "id": 1659451334,
        "node_id": "I_kwDOAqwwJc5i6TfG",
        "number": 65026,
        "title": "The suggested fix for the existential types with implicit unwrapping is incorrect when enable upcoming feature`ExistentialAny`",
        "user": {
            "login": "treastrain",
            "id": 13805382,
            "node_id": "MDQ6VXNlcjEzODA1Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13805382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/treastrain",
            "html_url": "https://github.com/treastrain",
            "followers_url": "https://api.github.com/users/treastrain/followers",
            "following_url": "https://api.github.com/users/treastrain/following{/other_user}",
            "gists_url": "https://api.github.com/users/treastrain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/treastrain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/treastrain/subscriptions",
            "organizations_url": "https://api.github.com/users/treastrain/orgs",
            "repos_url": "https://api.github.com/users/treastrain/repos",
            "events_url": "https://api.github.com/users/treastrain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/treastrain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 277147936,
                "node_id": "MDU6TGFiZWwyNzcxNDc5MzY=",
                "url": "https://api.github.com/repos/apple/swift/labels/bug",
                "name": "bug",
                "color": "B60205",
                "default": true,
                "description": "A deviation from expected or documented behavior. Also: expected but undesirable behavior."
            },
            {
                "id": 4067773055,
                "node_id": "LA_kwDOAqwwJc7ydUp_",
                "url": "https://api.github.com/repos/apple/swift/labels/compiler",
                "name": "compiler",
                "color": "fad599",
                "default": false,
                "description": "The Swift compiler in itself"
            },
            {
                "id": 4067774889,
                "node_id": "LA_kwDOAqwwJc7ydVGp",
                "url": "https://api.github.com/repos/apple/swift/labels/diagnostics%20QoI",
                "name": "diagnostics QoI",
                "color": "8d404a",
                "default": false,
                "description": "Diagnostics Quality of Implementation"
            },
            {
                "id": 4067774892,
                "node_id": "LA_kwDOAqwwJc7ydVGs",
                "url": "https://api.github.com/repos/apple/swift/labels/type%20checker",
                "name": "type checker",
                "color": "fe47ef",
                "default": false,
                "description": ""
            },
            {
                "id": 4067825153,
                "node_id": "LA_kwDOAqwwJc7ydhYB",
                "url": "https://api.github.com/repos/apple/swift/labels/fix-its",
                "name": "fix-its",
                "color": "E99695",
                "default": false,
                "description": "Feature: diagnostic fix-its"
            },
            {
                "id": 4834551886,
                "node_id": "LA_kwDOAqwwJc8AAAABICloTg",
                "url": "https://api.github.com/repos/apple/swift/labels/existentials",
                "name": "existentials",
                "color": "E99695",
                "default": false,
                "description": "Feature: values of \"any\" types (e.g. \"any Collection\") aka type-erased values"
            },
            {
                "id": 4987115366,
                "node_id": "LA_kwDOAqwwJc8AAAABKUFXZg",
                "url": "https://api.github.com/repos/apple/swift/labels/swift%205.8",
                "name": "swift 5.8",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "AnthonyLatsis",
            "id": 17835512,
            "node_id": "MDQ6VXNlcjE3ODM1NTEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/17835512?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AnthonyLatsis",
            "html_url": "https://github.com/AnthonyLatsis",
            "followers_url": "https://api.github.com/users/AnthonyLatsis/followers",
            "following_url": "https://api.github.com/users/AnthonyLatsis/following{/other_user}",
            "gists_url": "https://api.github.com/users/AnthonyLatsis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AnthonyLatsis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AnthonyLatsis/subscriptions",
            "organizations_url": "https://api.github.com/users/AnthonyLatsis/orgs",
            "repos_url": "https://api.github.com/users/AnthonyLatsis/repos",
            "events_url": "https://api.github.com/users/AnthonyLatsis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AnthonyLatsis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "AnthonyLatsis",
                "id": 17835512,
                "node_id": "MDQ6VXNlcjE3ODM1NTEy",
                "avatar_url": "https://avatars.githubusercontent.com/u/17835512?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/AnthonyLatsis",
                "html_url": "https://github.com/AnthonyLatsis",
                "followers_url": "https://api.github.com/users/AnthonyLatsis/followers",
                "following_url": "https://api.github.com/users/AnthonyLatsis/following{/other_user}",
                "gists_url": "https://api.github.com/users/AnthonyLatsis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/AnthonyLatsis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AnthonyLatsis/subscriptions",
                "organizations_url": "https://api.github.com/users/AnthonyLatsis/orgs",
                "repos_url": "https://api.github.com/users/AnthonyLatsis/repos",
                "events_url": "https://api.github.com/users/AnthonyLatsis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/AnthonyLatsis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-08T08:53:01Z",
        "updated_at": "2023-04-09T22:27:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Description**\r\nIn Swift 5.8, [SE-0335 \"Introduce existential any\"](https://github.com/apple/swift-evolution/blob/main/proposals/0335-existential-any.md) can be enabled by [SE-0362 \"Piecemeal adoption of upcoming language improvements\"](https://github.com/apple/swift-evolution/blob/main/proposals/0362-piecemeal-future-features.md). In that case, if the existential type is not given the `any` keyword, it causes a build error.\r\n\r\nThat build error contains a suggested fix, but it suggests a fix that seems incorrect when using implicitly unwrapped optionals.\r\n\r\n\r\n**Steps to reproduce**\r\n1. Create a Swift Package and open it Xcode 14.3.\r\n```bash\r\n% mkdir ExistentialAnySample\r\n\r\n% cd ExistentialAnySample\r\n\r\n% swift package init --type executable\r\nCreating executable package: ExistentialAnySample\r\nCreating Package.swift\r\nCreating .gitignore\r\nCreating Sources/\r\nCreating Sources/main.swift\r\n\r\n% xed .\r\n```\r\n\r\n2. Enable upcoming feature `ExistentialAny`.\r\n```swift:Package.swift\r\n// swift-tools-version: 5.8\r\n\r\nimport PackageDescription\r\n\r\nlet package = Package(\r\n    name: \"ExistentialAnySample\",\r\n    targets: [\r\n        .executableTarget(\r\n            name: \"ExistentialAnySample\",\r\n            path: \"Sources\",\r\n            swiftSettings: [\r\n                .enableUpcomingFeature(\"ExistentialAny\"),\r\n            ]),\r\n    ]\r\n)\r\n```\r\n\r\n3. Write the following code in `main.swift` and build it (we will get an error).\r\n```swift:main.swift\r\n//\r\n//  main.swift\r\n//  ExistentialAnySample\r\n//\r\n//  Created by treastrain on 2023/04/08.\r\n//\r\n\r\nprotocol SampleProtocol {}\r\n\r\nlet _: SampleProtocol! // ❌ Use of protocol 'SampleProtocol' as a type must be written 'any SampleProtocol'\r\n```\r\n\r\n4. Click \"Fix\" to accept the suggestion.\r\n![](https://user-images.githubusercontent.com/13805382/230712134-3b9135ea-6209-4a7c-b058-c3494614e908.png)\r\n\r\n5. The error continues and the build fails.\r\n![](https://user-images.githubusercontent.com/13805382/230712178-52b093fd-5ab2-42f8-85fa-de852fa5feaf.png)\r\n\r\n\r\n**Expected behavior**\r\nAfter clicking \"Fix\", `any SampleProtocol!` should be replaced with `(any SampleProtocol)!`.\r\n\r\n**Environment**\r\n- Swift compiler version info `swift-driver version: 1.75.2 Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100) Target: arm64-apple-macosx13.0`\r\n- Xcode version info `Xcode 14.3 Build version 14E222b`\r\n- Deployment target: iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4",
        "reactions": {
            "url": "https://api.github.com/repos/apple/swift/issues/65026/reactions",
            "total_count": 4,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apple/swift/issues/65026/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]