[
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2709",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2709/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2709/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2709/events",
        "html_url": "https://github.com/hwchase17/langchain/pull/2709",
        "id": 1662228623,
        "node_id": "PR_kwDOIPDwls5OAp_W",
        "number": 2709,
        "title": "Use tiktoken for Python 3.8",
        "user": {
            "login": "joshsny",
            "id": 7135900,
            "node_id": "MDQ6VXNlcjcxMzU5MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7135900?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshsny",
            "html_url": "https://github.com/joshsny",
            "followers_url": "https://api.github.com/users/joshsny/followers",
            "following_url": "https://api.github.com/users/joshsny/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshsny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshsny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshsny/subscriptions",
            "organizations_url": "https://api.github.com/users/joshsny/orgs",
            "repos_url": "https://api.github.com/users/joshsny/repos",
            "events_url": "https://api.github.com/users/joshsny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshsny/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T10:49:38Z",
        "updated_at": "2023-04-11T10:50:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/hwchase17/langchain/pulls/2709",
            "html_url": "https://github.com/hwchase17/langchain/pull/2709",
            "diff_url": "https://github.com/hwchase17/langchain/pull/2709.diff",
            "patch_url": "https://github.com/hwchase17/langchain/pull/2709.patch",
            "merged_at": null
        },
        "body": "Fixes issue #2677\r\n\r\n`tiktoken` is supported for Python 3.8, so there is no need to use the fallback GPT-2 tokenizer.",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2709/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2709/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2708",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2708/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2708/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2708/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2708",
        "id": 1662201505,
        "node_id": "I_kwDOIPDwls5jEy6h",
        "number": 2708,
        "title": "Idempotent agent chains or chains import/export?",
        "user": {
            "login": "denissabramovs",
            "id": 65600131,
            "node_id": "MDQ6VXNlcjY1NjAwMTMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/65600131?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/denissabramovs",
            "html_url": "https://github.com/denissabramovs",
            "followers_url": "https://api.github.com/users/denissabramovs/followers",
            "following_url": "https://api.github.com/users/denissabramovs/following{/other_user}",
            "gists_url": "https://api.github.com/users/denissabramovs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/denissabramovs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/denissabramovs/subscriptions",
            "organizations_url": "https://api.github.com/users/denissabramovs/orgs",
            "repos_url": "https://api.github.com/users/denissabramovs/repos",
            "events_url": "https://api.github.com/users/denissabramovs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/denissabramovs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T10:29:32Z",
        "updated_at": "2023-04-11T10:29:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Would be cool to have this feature. This way we could save already working agent chain into an idempotent workflow to reuse it later many many times. As i understand, right now, LLM can generate another plan for the next call and it could be invalid or with some error.\r\nWould be cool to persist that working plan to reuse it.",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2708/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2708/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2707",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2707/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2707/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2707/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2707",
        "id": 1662074604,
        "node_id": "I_kwDOIPDwls5jET7s",
        "number": 2707,
        "title": "ModuleNotFoundError: No module named 'langchain' (Even though LangChain is installed)",
        "user": {
            "login": "aodrasa",
            "id": 121209163,
            "node_id": "U_kgDOBzmBSw",
            "avatar_url": "https://avatars.githubusercontent.com/u/121209163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aodrasa",
            "html_url": "https://github.com/aodrasa",
            "followers_url": "https://api.github.com/users/aodrasa/followers",
            "following_url": "https://api.github.com/users/aodrasa/following{/other_user}",
            "gists_url": "https://api.github.com/users/aodrasa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aodrasa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aodrasa/subscriptions",
            "organizations_url": "https://api.github.com/users/aodrasa/orgs",
            "repos_url": "https://api.github.com/users/aodrasa/repos",
            "events_url": "https://api.github.com/users/aodrasa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aodrasa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T09:14:20Z",
        "updated_at": "2023-04-11T09:14:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Running from the same environment and have tried uninstalling/reinstalling - still getting this error.\r\n\r\nAnyone have a fix or know what I could be doing wrong?\r\n\r\n<img width=\"632\" alt=\"Screenshot 2023-04-11 at 7 05 40 pm\" src=\"https://user-images.githubusercontent.com/121209163/231112960-f55b80dc-93ae-4a96-abc2-33efa7b8cee1.png\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2707/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2707/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2706",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2706/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2706/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2706/events",
        "html_url": "https://github.com/hwchase17/langchain/pull/2706",
        "id": 1662059919,
        "node_id": "PR_kwDOIPDwls5OAFPF",
        "number": 2706,
        "title": "Minor: Remove duplicated word in error message",
        "user": {
            "login": "yanghua",
            "id": 2283778,
            "node_id": "MDQ6VXNlcjIyODM3Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2283778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yanghua",
            "html_url": "https://github.com/yanghua",
            "followers_url": "https://api.github.com/users/yanghua/followers",
            "following_url": "https://api.github.com/users/yanghua/following{/other_user}",
            "gists_url": "https://api.github.com/users/yanghua/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yanghua/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yanghua/subscriptions",
            "organizations_url": "https://api.github.com/users/yanghua/orgs",
            "repos_url": "https://api.github.com/users/yanghua/repos",
            "events_url": "https://api.github.com/users/yanghua/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yanghua/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-11T09:05:26Z",
        "updated_at": "2023-04-11T09:06:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/hwchase17/langchain/pulls/2706",
            "html_url": "https://github.com/hwchase17/langchain/pull/2706",
            "diff_url": "https://github.com/hwchase17/langchain/pull/2706.diff",
            "patch_url": "https://github.com/hwchase17/langchain/pull/2706.patch",
            "merged_at": null
        },
        "body": "Removed the duplicated word \"it\" from the error message.\r\nFrom:\r\n`Please it install it with xxx`\r\nTo:\r\n`Please install it with xxx`.",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2706/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2706/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2705",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2705/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2705/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2705/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2705",
        "id": 1662036269,
        "node_id": "I_kwDOIPDwls5jEKkt",
        "number": 2705,
        "title": "having some trouble when linking to MySQL",
        "user": {
            "login": "yaohongfenglove",
            "id": 71106576,
            "node_id": "MDQ6VXNlcjcxMTA2NTc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/71106576?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yaohongfenglove",
            "html_url": "https://github.com/yaohongfenglove",
            "followers_url": "https://api.github.com/users/yaohongfenglove/followers",
            "following_url": "https://api.github.com/users/yaohongfenglove/following{/other_user}",
            "gists_url": "https://api.github.com/users/yaohongfenglove/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yaohongfenglove/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yaohongfenglove/subscriptions",
            "organizations_url": "https://api.github.com/users/yaohongfenglove/orgs",
            "repos_url": "https://api.github.com/users/yaohongfenglove/repos",
            "events_url": "https://api.github.com/users/yaohongfenglove/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yaohongfenglove/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T08:50:12Z",
        "updated_at": "2023-04-11T08:50:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, I'm having some trouble when **linking to MySQL**. Does it only support connecting to sqlite? There seems to be **no introduction to connecting to MySQL in the document**",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2705/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2704",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2704/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2704/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2704/events",
        "html_url": "https://github.com/hwchase17/langchain/pull/2704",
        "id": 1661981771,
        "node_id": "PR_kwDOIPDwls5N_0uu",
        "number": 2704,
        "title": "Comet ML Integration",
        "user": {
            "login": "DN6",
            "id": 7529846,
            "node_id": "MDQ6VXNlcjc1Mjk4NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7529846?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DN6",
            "html_url": "https://github.com/DN6",
            "followers_url": "https://api.github.com/users/DN6/followers",
            "following_url": "https://api.github.com/users/DN6/following{/other_user}",
            "gists_url": "https://api.github.com/users/DN6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DN6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DN6/subscriptions",
            "organizations_url": "https://api.github.com/users/DN6/orgs",
            "repos_url": "https://api.github.com/users/DN6/repos",
            "events_url": "https://api.github.com/users/DN6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DN6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T08:11:19Z",
        "updated_at": "2023-04-11T08:12:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/hwchase17/langchain/pulls/2704",
            "html_url": "https://github.com/hwchase17/langchain/pull/2704",
            "diff_url": "https://github.com/hwchase17/langchain/pull/2704.diff",
            "patch_url": "https://github.com/hwchase17/langchain/pull/2704.patch",
            "merged_at": null
        },
        "body": "This PR:\r\n\r\n1. Adds support for logging metrics over generated outputs from Langchain Models\r\n2. Adds support for logging Langchain Chains/Models to Comet\r\n3. Adds support for logging Langchain LLM Parameters to Comet\r\n4. Adds support for logging  Spacy visualizations from Langchain\r\n5. Adds support for logging Langchain Session information as JSON and CSV (to be visualized with Data Panels)\r\n6. Updates Langchain Docs with the Comet Integration. ",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2704/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2704/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2703",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2703/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2703/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2703/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2703",
        "id": 1661977111,
        "node_id": "I_kwDOIPDwls5jD8IX",
        "number": 2703,
        "title": "question_answering chains answers cut off",
        "user": {
            "login": "MinhNguyen99AI",
            "id": 48023706,
            "node_id": "MDQ6VXNlcjQ4MDIzNzA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/48023706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MinhNguyen99AI",
            "html_url": "https://github.com/MinhNguyen99AI",
            "followers_url": "https://api.github.com/users/MinhNguyen99AI/followers",
            "following_url": "https://api.github.com/users/MinhNguyen99AI/following{/other_user}",
            "gists_url": "https://api.github.com/users/MinhNguyen99AI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MinhNguyen99AI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MinhNguyen99AI/subscriptions",
            "organizations_url": "https://api.github.com/users/MinhNguyen99AI/orgs",
            "repos_url": "https://api.github.com/users/MinhNguyen99AI/repos",
            "events_url": "https://api.github.com/users/MinhNguyen99AI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MinhNguyen99AI/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T08:08:14Z",
        "updated_at": "2023-04-11T08:08:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, I'm having some trouble finding the solution to this. \r\nI'm using Langchain on Colab, and for some reasons, the answers sometimes get cut off like below (screenshot attached)\r\nI have 2 questions, and both are cut off, as you can see. \r\nI tried changing 'max_len_answer' but nothing changes\r\n![image](https://user-images.githubusercontent.com/48023706/231097184-dc155701-25cd-4f27-8623-b6355be7646f.png)\r\nDo you guys have any suggesting for this?\r\nThank you. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2703/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2702",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2702/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2702/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2702/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2702",
        "id": 1661884074,
        "node_id": "I_kwDOIPDwls5jDlaq",
        "number": 2702,
        "title": "generation_info for ChatOpenAI model",
        "user": {
            "login": "vickyliin",
            "id": 22386362,
            "node_id": "MDQ6VXNlcjIyMzg2MzYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/22386362?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vickyliin",
            "html_url": "https://github.com/vickyliin",
            "followers_url": "https://api.github.com/users/vickyliin/followers",
            "following_url": "https://api.github.com/users/vickyliin/following{/other_user}",
            "gists_url": "https://api.github.com/users/vickyliin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vickyliin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vickyliin/subscriptions",
            "organizations_url": "https://api.github.com/users/vickyliin/orgs",
            "repos_url": "https://api.github.com/users/vickyliin/repos",
            "events_url": "https://api.github.com/users/vickyliin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vickyliin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T07:02:21Z",
        "updated_at": "2023-04-11T07:03:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I noticed llm `OpenAI` returns `finish_reason` in `generation_info` https://github.com/hwchase17/langchain/pull/526\r\nBut chat_model `ChatOpenAI`'s `generation_info` is `None`\r\n\r\n```python\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.schema import HumanMessage, SystemMessage\r\n\r\nchat = ChatOpenAI(temperature=0)\r\nmessages = [\r\n    SystemMessage(\r\n        content=\"You are a helpful assistant that translates English to French.\"\r\n    ),\r\n    HumanMessage(\r\n        content=\"Translate this sentence from English to French. I love programming.\"\r\n    ),\r\n]\r\nresult = chat.generate([messages])\r\nresult.generations[0][0]\r\n```\r\n```\r\nChatGeneration(text=\"J'aime programmer.\", generation_info=None, message=AIMessage(content=\"J'aime programmer.\", additional_kwargs={}))\r\n```\r\n\r\nShould we just add `generation_info` to the `ChatGeneration` of `ChatOpenAI` like `OpenAI`? I can help to create a PR if needed.\r\n\r\n\r\nhttps://github.com/hwchase17/langchain/blob/955bd2e1db8d008d628963cb8d2bad5c1d354744/langchain/chat_models/openai.py#L284\r\n\r\nhttps://github.com/hwchase17/langchain/blob/1f557ffa0e6c4c2137109d6a014b0617e9885b02/langchain/llms/openai.py#L170-L173",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2702/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2702/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2701",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2701/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2701/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2701/events",
        "html_url": "https://github.com/hwchase17/langchain/pull/2701",
        "id": 1661883908,
        "node_id": "PR_kwDOIPDwls5N_gLq",
        "number": 2701,
        "title": "FAISS: batch-embed in add_texts method",
        "user": {
            "login": "raphaelmerx",
            "id": 5139869,
            "node_id": "MDQ6VXNlcjUxMzk4Njk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5139869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphaelmerx",
            "html_url": "https://github.com/raphaelmerx",
            "followers_url": "https://api.github.com/users/raphaelmerx/followers",
            "following_url": "https://api.github.com/users/raphaelmerx/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphaelmerx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphaelmerx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphaelmerx/subscriptions",
            "organizations_url": "https://api.github.com/users/raphaelmerx/orgs",
            "repos_url": "https://api.github.com/users/raphaelmerx/repos",
            "events_url": "https://api.github.com/users/raphaelmerx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphaelmerx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T07:02:15Z",
        "updated_at": "2023-04-11T11:30:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/hwchase17/langchain/pulls/2701",
            "html_url": "https://github.com/hwchase17/langchain/pull/2701",
            "diff_url": "https://github.com/hwchase17/langchain/pull/2701.diff",
            "patch_url": "https://github.com/hwchase17/langchain/pull/2701.patch",
            "merged_at": null
        },
        "body": "Closes https://github.com/hwchase17/langchain/issues/2660\r\n\r\nFAISS equivalent to https://github.com/hwchase17/langchain/pull/2657\r\n\r\nSwitches the FAISS init arguments to use an `Embeddings` object, so that in `add_texts`, we can call `embed_documents` which will batch-encode all of the passed text. This means a lot less calls to the embedding when passing a high number of new texts to `add_texts`\r\n\r\nMade sure that `make lint` passes for this",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2701/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2701/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2700",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2700/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2700/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2700/events",
        "html_url": "https://github.com/hwchase17/langchain/pull/2700",
        "id": 1661880317,
        "node_id": "PR_kwDOIPDwls5N_fZ7",
        "number": 2700,
        "title": "Remove unnecessary method from Qdrant vectorstore and clean up docstrings",
        "user": {
            "login": "vr140",
            "id": 1480791,
            "node_id": "MDQ6VXNlcjE0ODA3OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1480791?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vr140",
            "html_url": "https://github.com/vr140",
            "followers_url": "https://api.github.com/users/vr140/followers",
            "following_url": "https://api.github.com/users/vr140/following{/other_user}",
            "gists_url": "https://api.github.com/users/vr140/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vr140/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vr140/subscriptions",
            "organizations_url": "https://api.github.com/users/vr140/orgs",
            "repos_url": "https://api.github.com/users/vr140/repos",
            "events_url": "https://api.github.com/users/vr140/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vr140/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T06:59:32Z",
        "updated_at": "2023-04-11T07:08:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/hwchase17/langchain/pulls/2700",
            "html_url": "https://github.com/hwchase17/langchain/pull/2700",
            "diff_url": "https://github.com/hwchase17/langchain/pull/2700.diff",
            "patch_url": "https://github.com/hwchase17/langchain/pull/2700.patch",
            "merged_at": null
        },
        "body": "**Problem:**\r\n\r\nThe `from_documents` method in Qdrant vectorstore is unnecessary because it does not change any default behavior from the abstract base class method of `from_documents` (contrast this with the method in Chroma which makes a change from default and turns `embeddings` into an Optional parameter).\r\n\r\nAlso, the docstrings need some cleanup.\r\n\r\n**Solution:**\r\n\r\nRemove unnecessary method and improve docstrings.",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2700/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2700/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2699",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2699/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2699/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2699/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2699",
        "id": 1661852287,
        "node_id": "I_kwDOIPDwls5jDdp_",
        "number": 2699,
        "title": "How to delete or update a document within a FAISS index?",
        "user": {
            "login": "sanasz91mdev",
            "id": 39674269,
            "node_id": "MDQ6VXNlcjM5Njc0MjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/39674269?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sanasz91mdev",
            "html_url": "https://github.com/sanasz91mdev",
            "followers_url": "https://api.github.com/users/sanasz91mdev/followers",
            "following_url": "https://api.github.com/users/sanasz91mdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/sanasz91mdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sanasz91mdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sanasz91mdev/subscriptions",
            "organizations_url": "https://api.github.com/users/sanasz91mdev/orgs",
            "repos_url": "https://api.github.com/users/sanasz91mdev/repos",
            "events_url": "https://api.github.com/users/sanasz91mdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sanasz91mdev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T06:33:19Z",
        "updated_at": "2023-04-11T06:33:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n\r\nI have a usecase where i have to fetch Edited posts weekly from community and update the docs within FAISS index. \r\nis that possible? or do i have to keep deleting and create new index everytime?\r\n\r\nAlso i use RecursiveCharacterTextSplitter to split docs.\r\n\r\n  ```\r\n  loader = DirectoryLoader('./recent_data')\r\n    raw_documents = loader.load()\r\n    #Splitting documents into chunks\r\n    text_splitter = RecursiveCharacterTextSplitter(\r\n        chunk_size=1000,\r\n        chunk_overlap=200,\r\n    )\r\n    documents = text_splitter.split_documents(raw_documents)\r\n    print(len(documents))\r\n    # Changing source to point to the original document\r\n    for x in documents:\r\n        print(x.metadata[\"source\"])\r\n    # Creating index and saving it to disk\r\n    print(\"Creating index\")\r\n    db_new = FAISS.from_documents(documents, embeddings )\r\n```\r\n\r\nthis is output if i use `    print(db_new .docstore._dict)`\r\n\r\n`{'2d9b6fbf-a44d-46b5-bcdf-b45cd9438a4c': Document(page_content='<p dir=\"auto\">This is a test topic.</p>', metadata={'source': 'recent/https://community.tpsonline.com/topic/587/ignore-test-topic'}), '706dcaf8-f9d9-45b9-bdf4-8a8ac7618229': Document(page_content='What is an SDD?\\n\\n<p dir=\"auto\">A software design description (a.k.a. software design document or SDD; just design document; also Software Design Specification) is a representation of a software design that is to be used for recording design information, addressing various design concerns, and communicating that information to the different stakeholders.</p>\\n\\n<p dir=\"auto\">This SDD template represent design w.r.t various software viewpoints, where each viewpoint will handle specific concerns of Design. This is based on <strong>ISO 42010 standard</strong>.</p>\\n\\nIntroduction\\n\\n<p dir=\"auto\">[Name/brief description of feature for which SDD is being Produced]</p>\\n\\n1. Context Viewpoint\\n\\n<p dir=\"auto\">[Describes the relationships, dependencies, and interactions between the system and its environment ]</p>\\n\\n1.1 Use Cases\\n\\n1.1.1  AS IS (Pre Condition)\\n\\n1.1.2 TO - BE (Post Condition)\\n\\n1.2 System Context  View\\n\\n1.2.1 - AS IS (Pre Condition)\\n\\n1.2.2 TO - BE (Post Condition)\\n\\n2. Logical Viewpoint', metadata={'source': 'recent/https://community.tpsonline.com/topic/586/software-design-description-sdd-template'}), '4d6d4e6b-01ee-46bb-ae06-84514a51baf2': Document(page_content='1.1 Use Cases\\n\\n1.1.1  AS IS (Pre Condition)\\n\\n1.1.2 TO - BE (Post Condition)\\n\\n1.2 System Context  View\\n\\n1.2.1 - AS IS (Pre Condition)\\n\\n1.2.2 TO - BE (Post Condition)\\n\\n2. Logical Viewpoint\\n\\n<p dir=\"auto\">[The purpose of the Logical viewpoint is to elaborate existing and designed types and their implementations as classes and interfaces with their structural static relationships]</p>\\n\\n2.1 Class Diagram\\n\\n2.1.1 AS - IS (Pre Condition)\\n\\n2.1.2 TO - BE (Post Condition)\\n\\n2.1.2.1 Class Interfaces and description\\n\\n<p dir=\"auto\">[Below is being presented as an example]<br />\\n\\n[This section should tell about the responsibility of each class method and their parameters too if required]</p>\\n\\n2.1.2.1.1 IRenewProcess\\n\\nMethod\\n\\nDescription\\n\\nprocessRenewal\\n\\nMethod to process renewal of a given cardEntity. Each concrete class that will implement the interface will implement its own version of renewal steps\\n\\n2.1.2.1.1 RenewStrategyContext (static class)\\n\\nMethod\\n\\nDescription\\n\\n(private)getRenewalMethod', metadata={'source': 'recent/https://community.tpsonline.com/topic/586/software-design-description-sdd-template'})}`\r\n\r\nso will i be able to update docs within index or is it just not possible?",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2699/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2699/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2698",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2698/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2698/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2698/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2698",
        "id": 1661837012,
        "node_id": "I_kwDOIPDwls5jDZ7U",
        "number": 2698,
        "title": "Permission Error with PDF loader",
        "user": {
            "login": "realglyph123",
            "id": 124026881,
            "node_id": "U_kgDOB2SAAQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/124026881?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/realglyph123",
            "html_url": "https://github.com/realglyph123",
            "followers_url": "https://api.github.com/users/realglyph123/followers",
            "following_url": "https://api.github.com/users/realglyph123/following{/other_user}",
            "gists_url": "https://api.github.com/users/realglyph123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/realglyph123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/realglyph123/subscriptions",
            "organizations_url": "https://api.github.com/users/realglyph123/orgs",
            "repos_url": "https://api.github.com/users/realglyph123/repos",
            "events_url": "https://api.github.com/users/realglyph123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/realglyph123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T06:17:16Z",
        "updated_at": "2023-04-11T06:18:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I was testing OnlinePDFLoader yesterday iirc and it was working fine. Today I tried experimenting and I keep getting this error\r\n\r\n`PermissionError: [Errno 13] Permission denied: 'C:\\\\Users\\\\REALGL~1\\\\AppData\\\\Local\\\\Temp\\\\tmp3chr08y0`\r\n\r\nit may be occurring because the `tempfile.NamedTemporaryFile()` in `pdf.py` is still open when the PDF partitioning function is trying to access it",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2698/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2698/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2697",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2697/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2697/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2697/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2697",
        "id": 1661811809,
        "node_id": "I_kwDOIPDwls5jDTxh",
        "number": 2697,
        "title": "Directory loader error for pdfs",
        "user": {
            "login": "Kashif-Raza6",
            "id": 96944736,
            "node_id": "U_kgDOBcdCYA",
            "avatar_url": "https://avatars.githubusercontent.com/u/96944736?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kashif-Raza6",
            "html_url": "https://github.com/Kashif-Raza6",
            "followers_url": "https://api.github.com/users/Kashif-Raza6/followers",
            "following_url": "https://api.github.com/users/Kashif-Raza6/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kashif-Raza6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kashif-Raza6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kashif-Raza6/subscriptions",
            "organizations_url": "https://api.github.com/users/Kashif-Raza6/orgs",
            "repos_url": "https://api.github.com/users/Kashif-Raza6/repos",
            "events_url": "https://api.github.com/users/Kashif-Raza6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kashif-Raza6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T05:51:16Z",
        "updated_at": "2023-04-11T05:51:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am trying to load the multiple pdf using the directory loader its popping up with the following error:\r\n\r\n`ImportError: cannot import name 'is_directory' from 'PIL._util' (/usr/local/lib/python3.9/dist-packages/PIL/_util.py)`",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2697/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2697/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2696",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2696/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2696/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2696/events",
        "html_url": "https://github.com/hwchase17/langchain/pull/2696",
        "id": 1661809148,
        "node_id": "PR_kwDOIPDwls5N_QU_",
        "number": 2696,
        "title": "Support the `GPTCache` caching",
        "user": {
            "login": "SimFG",
            "id": 21985684,
            "node_id": "MDQ6VXNlcjIxOTg1Njg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/21985684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SimFG",
            "html_url": "https://github.com/SimFG",
            "followers_url": "https://api.github.com/users/SimFG/followers",
            "following_url": "https://api.github.com/users/SimFG/following{/other_user}",
            "gists_url": "https://api.github.com/users/SimFG/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SimFG/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SimFG/subscriptions",
            "organizations_url": "https://api.github.com/users/SimFG/orgs",
            "repos_url": "https://api.github.com/users/SimFG/repos",
            "events_url": "https://api.github.com/users/SimFG/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SimFG/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T05:47:52Z",
        "updated_at": "2023-04-11T06:28:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/hwchase17/langchain/pulls/2696",
            "html_url": "https://github.com/hwchase17/langchain/pull/2696",
            "diff_url": "https://github.com/hwchase17/langchain/pull/2696.diff",
            "patch_url": "https://github.com/hwchase17/langchain/pull/2696.patch",
            "merged_at": null
        },
        "body": "[GPTCache](https://github.com/zilliztech/GPTCache) is a library for creating semantic cache to store responses from LLM queries.",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2696/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2696/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2695",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2695/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2695/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2695/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2695",
        "id": 1661787838,
        "node_id": "I_kwDOIPDwls5jDN6-",
        "number": 2695,
        "title": "Allow Weaviate initialization with alternative embedding implementation ",
        "user": {
            "login": "alancamillo",
            "id": 3343225,
            "node_id": "MDQ6VXNlcjMzNDMyMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3343225?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alancamillo",
            "html_url": "https://github.com/alancamillo",
            "followers_url": "https://api.github.com/users/alancamillo/followers",
            "following_url": "https://api.github.com/users/alancamillo/following{/other_user}",
            "gists_url": "https://api.github.com/users/alancamillo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alancamillo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alancamillo/subscriptions",
            "organizations_url": "https://api.github.com/users/alancamillo/orgs",
            "repos_url": "https://api.github.com/users/alancamillo/repos",
            "events_url": "https://api.github.com/users/alancamillo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alancamillo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T05:19:00Z",
        "updated_at": "2023-04-11T05:19:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I would like to provide an 'embeddings' parameter for the initialization of the Weaviate vector store, as I do not want to start the Weaviate server with the OpenAI key in order to make use of embeddings through the Azure OpenAI Service. \r\n\r\nThe addition of the embeddings parameter affects the __init__ method, as shown in the code snippet above. To accommodate this change, you'll also need to modify the add_texts method. \r\n\r\n```python\r\ndef __init__(\r\n        self,\r\n        client: Any,\r\n        index_name: str,\r\n        text_key: str,\r\n        embedding_function: Optional[Embeddings] = None,\r\n        attributes: Optional[List[str]] = None,\r\n    ):\r\n        \"\"\"Initialize with Weaviate client.\"\"\"\r\n        try:\r\n            import weaviate\r\n        except ImportError:\r\n            raise ValueError(\r\n                \"Could not import weaviate python package. \"\r\n                \"Please install it with `pip install weaviate-client`.\"\r\n            )\r\n        if not isinstance(client, weaviate.Client):\r\n            raise ValueError(\r\n                f\"client should be an instance of weaviate.Client, got {type(client)}\"\r\n            )\r\n        self._client = client\r\n        self._index_name = index_name\r\n        self._text_key = text_key\r\n        self._embedding_function = embedding_function\r\n        self._query_attrs = [self._text_key]\r\n        if attributes is not None:\r\n            self._query_attrs.extend(attributes)\r\n```\r\n\r\nTo check if the embeddings parameter was provided during initialization and perform the necessary actions, you can modify the add_texts method in the following way:\r\n\r\n```python\r\ndef add_texts(\r\n        self,\r\n        texts: Iterable[str],\r\n        metadatas: Optional[List[dict]] = None,\r\n        **kwargs: Any,\r\n    ) -> List[str]:\r\n        \"\"\"Upload texts with metadata (properties) to Weaviate.\"\"\"\r\n        from weaviate.util import get_valid_uuid\r\n\r\n        with self._client.batch as batch:\r\n            ids = []\r\n            for i, doc in enumerate(texts):\r\n                data_properties = {\r\n                    self._text_key: doc,\r\n                }\r\n                if metadatas is not None:\r\n                    for key in metadatas[i].keys():\r\n                        data_properties[key] = metadatas[i][key]\r\n\r\n                _id = get_valid_uuid(uuid4())\r\n                \r\n                if self._embedding_function is not None:\r\n                    embeddings = self._embedding_function.embed_documents(list(doc))\r\n                    batch.add_data_object(data_properties, self._index_name, _id, vector=embeddings[0])\r\n                else:   \r\n                    batch.add_data_object(data_properties, self._index_name, _id)\r\n                ids.append(_id)\r\n        return ids\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2695/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2695/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2694",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2694/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2694/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2694/events",
        "html_url": "https://github.com/hwchase17/langchain/pull/2694",
        "id": 1661748770,
        "node_id": "PR_kwDOIPDwls5N_Dr6",
        "number": 2694,
        "title": "VectorStore Memory Module",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T04:26:23Z",
        "updated_at": "2023-04-11T04:28:23Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/hwchase17/langchain/pulls/2694",
            "html_url": "https://github.com/hwchase17/langchain/pull/2694",
            "diff_url": "https://github.com/hwchase17/langchain/pull/2694.diff",
            "patch_url": "https://github.com/hwchase17/langchain/pull/2694.patch",
            "merged_at": null
        },
        "body": "Adds a basic VectorStore-backed memory module.\r\n\r\nSo far doesn't inherit from ChatMemory since the initial usage is likely to be around storing intermediate steps. However it would be straightforward to alter or add an addition memory class for that.\r\n\r\nAdds a notebook.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2694/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2694/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2693",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2693/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2693/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2693/events",
        "html_url": "https://github.com/hwchase17/langchain/pull/2693",
        "id": 1661746390,
        "node_id": "PR_kwDOIPDwls5N_DNV",
        "number": 2693,
        "title": "Harrison/aws text",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-11T04:22:32Z",
        "updated_at": "2023-04-11T10:43:27Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/hwchase17/langchain/pulls/2693",
            "html_url": "https://github.com/hwchase17/langchain/pull/2693",
            "diff_url": "https://github.com/hwchase17/langchain/pull/2693.diff",
            "patch_url": "https://github.com/hwchase17/langchain/pull/2693.patch",
            "merged_at": null
        },
        "body": "needs a notebook",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2693/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2693/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2690",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2690/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2690/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2690/events",
        "html_url": "https://github.com/hwchase17/langchain/pull/2690",
        "id": 1661675335,
        "node_id": "PR_kwDOIPDwls5N-0jO",
        "number": 2690,
        "title": "first draft",
        "user": {
            "login": "donaldziff",
            "id": 48325120,
            "node_id": "MDQ6VXNlcjQ4MzI1MTIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/48325120?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/donaldziff",
            "html_url": "https://github.com/donaldziff",
            "followers_url": "https://api.github.com/users/donaldziff/followers",
            "following_url": "https://api.github.com/users/donaldziff/following{/other_user}",
            "gists_url": "https://api.github.com/users/donaldziff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/donaldziff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/donaldziff/subscriptions",
            "organizations_url": "https://api.github.com/users/donaldziff/orgs",
            "repos_url": "https://api.github.com/users/donaldziff/repos",
            "events_url": "https://api.github.com/users/donaldziff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/donaldziff/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-11T02:34:00Z",
        "updated_at": "2023-04-11T04:11:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/hwchase17/langchain/pulls/2690",
            "html_url": "https://github.com/hwchase17/langchain/pull/2690",
            "diff_url": "https://github.com/hwchase17/langchain/pull/2690.diff",
            "patch_url": "https://github.com/hwchase17/langchain/pull/2690.patch",
            "merged_at": null
        },
        "body": "There is a long way to go on this!",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2690/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2690/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2685",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2685/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2685/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2685/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2685",
        "id": 1661468710,
        "node_id": "I_kwDOIPDwls5jCAAm",
        "number": 2685,
        "title": "VectorStoreIndexCreator can't load from UnstructuredFileLoader",
        "user": {
            "login": "MinhCndS64",
            "id": 105620566,
            "node_id": "U_kgDOBkukVg",
            "avatar_url": "https://avatars.githubusercontent.com/u/105620566?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MinhCndS64",
            "html_url": "https://github.com/MinhCndS64",
            "followers_url": "https://api.github.com/users/MinhCndS64/followers",
            "following_url": "https://api.github.com/users/MinhCndS64/following{/other_user}",
            "gists_url": "https://api.github.com/users/MinhCndS64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MinhCndS64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MinhCndS64/subscriptions",
            "organizations_url": "https://api.github.com/users/MinhCndS64/orgs",
            "repos_url": "https://api.github.com/users/MinhCndS64/repos",
            "events_url": "https://api.github.com/users/MinhCndS64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MinhCndS64/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T22:25:51Z",
        "updated_at": "2023-04-10T22:25:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Expectation: \r\nLoading a text file via UnstructuredFileLoader then passing the output docs to VectorStoreIndexCreator should work\r\nObservation:\r\nCrash when attempting to call `VectorstoreIndexCreator().from_loaders(unstructuredFileLoader)`\r\n\r\nCrashlog:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/minhcnd/Repos/llm-demo/llm_demo/main.py\", line 30, in <module>\r\n    index = VectorstoreIndexCreator().from_loaders(loaders)\r\n  File \"/Users/minhcnd/Library/Caches/pypoetry/virtualenvs/llm-demo-yOjCLQYD-py3.9/lib/python3.9/site-packages/langchain/indexes/vectorstore.py\", line 71, in from_loaders\r\n    vectorstore = self.vectorstore_cls.from_documents(\r\n  File \"/Users/minhcnd/Library/Caches/pypoetry/virtualenvs/llm-demo-yOjCLQYD-py3.9/lib/python3.9/site-packages/langchain/vectorstores/chroma.py\", line 334, in from_documents\r\n    return cls.from_texts(\r\n  File \"/Users/minhcnd/Library/Caches/pypoetry/virtualenvs/llm-demo-yOjCLQYD-py3.9/lib/python3.9/site-packages/langchain/vectorstores/chroma.py\", line 303, in from_texts\r\n    chroma_collection.add_texts(texts=texts, metadatas=metadatas, ids=ids)\r\n  File \"/Users/minhcnd/Library/Caches/pypoetry/virtualenvs/llm-demo-yOjCLQYD-py3.9/lib/python3.9/site-packages/langchain/vectorstores/chroma.py\", line 114, in add_texts\r\n    self._collection.add(\r\n  File \"/Users/minhcnd/Library/Caches/pypoetry/virtualenvs/llm-demo-yOjCLQYD-py3.9/lib/python3.9/site-packages/chromadb/api/models/Collection.py\", line 85, in add\r\n    metadatas = validate_metadatas(maybe_cast_one_to_many(metadatas)) if metadatas else None\r\n  File \"/Users/minhcnd/Library/Caches/pypoetry/virtualenvs/llm-demo-yOjCLQYD-py3.9/lib/python3.9/site-packages/chromadb/api/types.py\", line 108, in validate_metadatas\r\n    validate_metadata(metadata)\r\n  File \"/Users/minhcnd/Library/Caches/pypoetry/virtualenvs/llm-demo-yOjCLQYD-py3.9/lib/python3.9/site-packages/chromadb/api/types.py\", line 99, in validate_metadata\r\n    raise ValueError(f\"Expected metadata value to be a str, int, or float, got {value}\")\r\nValueError: Expected metadata value to be a str, int, or float, got seneca.txt\r\n```\r\n\r\nRoot cause:\r\nIn unstructured.py, `_get_metadata()` returns a **PoxisPath** object, but validate_metadata expects a str, int or float\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2685/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2685/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2683",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2683/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2683/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2683/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2683",
        "id": 1661437301,
        "node_id": "I_kwDOIPDwls5jB4V1",
        "number": 2683,
        "title": "Support concurrent usage of OpenAI API and Azure OpenAI",
        "user": {
            "login": "kjwong",
            "id": 8967742,
            "node_id": "MDQ6VXNlcjg5Njc3NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8967742?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kjwong",
            "html_url": "https://github.com/kjwong",
            "followers_url": "https://api.github.com/users/kjwong/followers",
            "following_url": "https://api.github.com/users/kjwong/following{/other_user}",
            "gists_url": "https://api.github.com/users/kjwong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kjwong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kjwong/subscriptions",
            "organizations_url": "https://api.github.com/users/kjwong/orgs",
            "repos_url": "https://api.github.com/users/kjwong/repos",
            "events_url": "https://api.github.com/users/kjwong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kjwong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-10T22:01:07Z",
        "updated_at": "2023-04-11T10:24:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I would like to make requests to both Azure OpenAI and the OpenAI API in my app using the `AzureChatOpenAI` and `ChatOpenAI` classes respectively. \r\n\r\nThe issue I'm running into is it seems both classes depend on the same environment variables/global OpenAI variables (`openai.api_key`, `openai.api_type`, etc). For example, if I create an `AzureChatOpenAI` instance, the variables will be set to Azure config, and this will cause any subsequent OpenAI calls to fail. \r\n\r\nI also have two instances of Azure OpenAI that I want to hit (e.g. I have text-davinci-003 running in EU and gpt-3.5-turbo running in US as gpt-3.5-turbo isn't supported in EU yet), so it would be nice if I could have separate instances of `AzureChatOpenAI` with different configs. \r\n\r\nA workaround is to set these environment variables manually before every call, which `AzureChatOpenAI` kind of does, but this seems susceptible to race conditions if concurrent requests are made to my app since these variables aren't directly passed into the request and there's no locking mechanism. \r\n\r\nWould it be possible to have multiple instances of these classes and not have these instances obscurely share state? Or is this just a limitation of the way OpenAI's python package is setup? \r\n\r\nThank you!",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2683/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2683/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2680",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2680/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2680/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2680/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2680",
        "id": 1661305027,
        "node_id": "I_kwDOIPDwls5jBYDD",
        "number": 2680,
        "title": "How to Iteratively parse all the contents within links on a page?",
        "user": {
            "login": "nazkhan-8451",
            "id": 108809950,
            "node_id": "U_kgDOBnxO3g",
            "avatar_url": "https://avatars.githubusercontent.com/u/108809950?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nazkhan-8451",
            "html_url": "https://github.com/nazkhan-8451",
            "followers_url": "https://api.github.com/users/nazkhan-8451/followers",
            "following_url": "https://api.github.com/users/nazkhan-8451/following{/other_user}",
            "gists_url": "https://api.github.com/users/nazkhan-8451/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nazkhan-8451/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nazkhan-8451/subscriptions",
            "organizations_url": "https://api.github.com/users/nazkhan-8451/orgs",
            "repos_url": "https://api.github.com/users/nazkhan-8451/repos",
            "events_url": "https://api.github.com/users/nazkhan-8451/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nazkhan-8451/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T20:17:14Z",
        "updated_at": "2023-04-10T20:17:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The following only parse the info within the webpage. If there are links/other pages embedded into the webpage, how do I parse them iteratively?\r\n\r\n`loader = WebBaseLoader(\"https://beta.ruff.rs/docs/faq/\")`\r\n`blog_docs = loader.load()`\r\n\r\nprint(blog_docs)\r\n\r\n> [Document(page_content='\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nFAQ - Ruff\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nSkip to content\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nRuff\\n\\n\\n\\n\\nFAQ\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nInitializing search\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nruff\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nRuff\\n\\n\\n\\n\\n\\n\\n\\nruff\\n\\n\\n\\n\\n\\n\\nOverview\\n\\n\\n\\n\\nTutorial\\n\\n\\n\\n\\nInstallation\\n\\n\\n\\n\\nUsage\\n\\n\\n\\n\\nConfiguration\\n\\n\\n\\n\\nRules\\n\\n\\n\\n\\nSettings\\n\\n\\n\\n\\nEditor Integrations\\n\\n\\n\\n\\n\\nFAQ\\n\\n\\n\\nFAQ\\n\\n\\n\\n\\nTable of contents\\n\\n\\n\\n\\nIs Ruff compatible with Black?\\n\\n\\n\\n\\nHow does Ruff compare to Flake8?\\n\\n\\n\\n\\nHow does Ruff compare to Pylint?\\n\\n\\n\\n\\nHow does Ruff compare to Mypy, or Pyright, or Pyre?\\n\\n\\n\\n\\nWhich tools does Ruff replace?\\n\\n\\n\\n\\nWhat versions of Python does Ruff support?\\n\\n\\n\\n\\nDo I need to install Rust to use Ruff?\\n\\n\\n\\n\\nCan I write my own plugins for Ruff?\\n\\n\\n\\n\\nHow does Ruff\\'s import sorting compare to isort?\\n\\n\\n\\n\\nDoes Ruff support Jupyter Notebooks?\\n\\n\\n\\n\\nDoes Ruff support NumPy- or Google-style docstrings?\\n\\n\\n\\n\\nHow can I tell what settings Ruff is using to check my code?\\n\\n\\n\\n\\nI want to use Ruff, but I don\\'t want to use pyproject.toml. Is that possible?\\n\\n\\n\\n\\nHow can I change Ruff\\'s default configuration?\\n\\n\\n\\n\\nRuff tried to fix something — but it broke my code?\\n\\n\\n\\n\\nHow can I disable Ruff\\'s color output?\\n\\n\\n\\n\\n\\n\\n\\nContributing\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nFAQ#\\nIs Ruff compatible with Black?#\\nYes. Ruff is compatible with Black out-of-the-box, as long as\\nthe line-length setting is consistent between the two.\\nAs a project, Ruff is designed to be used alongside Black and, as such, will defer implementing\\nstylistic lint rules that are obviated by autoformatting.\\nHow does Ruff compare to Flake8?#\\n(Coming from Flake8? Try flake8-to-ruff to\\nautomatically convert your existing configuration.)\\nRuff can be used as a drop-in replacement for Flake8 when used (1) without or with a small number of\\nplugins, (2) alongside Black, and (3) on Python 3 code.\\nUnder those conditions, Ruff implements every rule in Flake8. In practice, that means Ruff\\nimplements all of the F rules (which originate from Pyflakes), along with a subset of the E and\\nW rules (which originate from pycodestyle).\\nRuff also re-implements some of the most popular Flake8 plugins and related code quality tools\\nnatively, including:\\n\\nautoflake\\neradicate\\nflake8-2020\\nflake8-annotations\\nflake8-bandit (#1646)\\nflake8-blind-except\\nflake8-boolean-trap\\nflake8-bugbear\\nflake8-builtins\\nflake8-commas\\nflake8-comprehensions\\nflake8-datetimez\\nflake8-debugger\\nflake8-django\\nflake8-docstrings\\nflake8-eradicate\\nflake8-errmsg\\nflake8-executable\\nflake8-gettext\\nflake8-implicit-str-concat\\nflake8-import-conventions\\nflake8-logging-format\\nflake8-no-pep420\\nflake8-pie\\nflake8-print\\nflake8-pyi\\nflake8-pytest-style\\nflake8-quotes\\nflake8-raise\\nflake8-return\\nflake8-self\\nflake8-simplify\\nflake8-super\\nflake8-tidy-imports\\nflake8-type-checking\\nflake8-use-pathlib\\nisort\\nmccabe\\npandas-vet\\npep8-naming\\npydocstyle\\npygrep-hooks (#980)\\npyupgrade\\ntryceratops\\nyesqa\\n\\nNote that, in some cases, Ruff uses different rule codes and prefixes than would be found in the\\noriginating Flake8 plugins. For example, Ruff uses TID252 to represent the I252 rule from\\nflake8-tidy-imports. This helps minimize conflicts across plugins and allows any individual plugin\\nto be toggled on or off with a single (e.g.) --select TID, as opposed to --select I2 (to avoid\\nconflicts with the isort rules, like I001).\\nBeyond the rule set, Ruff\\'s primary limitation vis-à-vis Flake8 is that it does not support custom\\nlint rules. (Instead, popular Flake8 plugins are re-implemented in Rust as part of Ruff itself.)\\nThere are a few other minor incompatibilities between Ruff and the originating Flake8 plugins:\\n\\nRuff doesn\\'t implement all the \"opinionated\" lint rules from flake8-bugbear.\\nDepending on your project structure, Ruff and isort can differ in their detection of first-party\\ncode. (This is often solved by modifying the src property, e.g., to src = [\"src\"], if your\\ncode is nested in a src directory.)\\n\\nHow does Ruff compare to Pylint?#\\nAt time of writing, Pylint implements ~409 total rules, while Ruff implements 440, of which at least\\n89 overlap with the Pylint rule set (you can find the mapping in #970).\\nPylint implements many rules that Ruff does not, and vice versa. For example, Pylint does more type\\ninference than Ruff (e.g., Pylint can validate the number of arguments in a function call). As such,\\nRuff is not a \"pure\" drop-in replacement for Pylint (and vice versa), as they enforce different sets\\nof rules.\\nDespite these differences, many users have successfully switched from Pylint to Ruff, especially\\nthose using Ruff alongside a type checker,\\nwhich can cover some of the functionality that Pylint provides.\\nLike Flake8, Pylint supports plugins (called \"checkers\"), while Ruff implements all rules natively.\\nUnlike Pylint, Ruff is capable of automatically fixing its own lint violations.\\nPylint parity is being tracked in #970.\\nHow does Ruff compare to Mypy, or Pyright, or Pyre?#\\nRuff is a linter, not a type checker. It can detect some of the same problems that a type checker\\ncan, but a type checker will catch certain errors that Ruff would miss. The opposite is also true:\\nRuff will catch certain errors that a type checker would typically ignore.\\nFor example, unlike a type checker, Ruff will notify you if an import is unused, by looking for\\nreferences to that import in the source code; on the other hand, a type checker could flag that you\\npassed an integer argument to a function that expects a string, which Ruff would miss. The\\ntools are complementary.\\nIt\\'s recommended that you use Ruff in conjunction with a type checker, like Mypy, Pyright, or Pyre,\\nwith Ruff providing faster feedback on lint violations and the type checker providing more detailed\\nfeedback on type errors.\\nWhich tools does Ruff replace?#\\nToday, Ruff can be used to replace Flake8 when used with any of the following plugins:\\n\\nflake8-2020\\nflake8-annotations\\nflake8-bandit (#1646)\\nflake8-blind-except\\nflake8-boolean-trap\\nflake8-bugbear\\nflake8-builtins\\nflake8-commas\\nflake8-comprehensions\\nflake8-datetimez\\nflake8-debugger\\nflake8-django\\nflake8-docstrings\\nflake8-eradicate\\nflake8-errmsg\\nflake8-executable\\nflake8-gettext\\nflake8-implicit-str-concat\\nflake8-import-conventions\\nflake8-logging-format\\nflake8-no-pep420\\nflake8-pie\\nflake8-print\\nflake8-pytest-style\\nflake8-quotes\\nflake8-raise\\nflake8-return\\nflake8-self\\nflake8-simplify\\nflake8-super\\nflake8-tidy-imports\\nflake8-type-checking\\nflake8-use-pathlib\\nmccabe\\npandas-vet\\npep8-naming\\npydocstyle\\ntryceratops\\n\\nRuff can also replace isort,\\nyesqa, eradicate, and\\nmost of the rules implemented in pyupgrade.\\nIf you\\'re looking to use Ruff, but rely on an unsupported Flake8 plugin, feel free to file an\\nissue.\\nWhat versions of Python does Ruff support?#\\nRuff can lint code for any Python version from 3.7 onwards, including Python 3.10 and 3.11.\\nRuff does not support Python 2. Ruff may run on pre-Python 3.7 code, although such versions\\nare not officially supported (e.g., Ruff does not respect type comments).\\nRuff is installable under any Python version from 3.7 onwards.\\nDo I need to install Rust to use Ruff?#\\nNope! Ruff is available as ruff on PyPI:\\npip install ruff\\n\\nRuff ships with wheels for all major platforms, which enables pip to install Ruff without relying\\non Rust at all.\\nCan I write my own plugins for Ruff?#\\nRuff does not yet support third-party plugins, though a plugin system is within-scope for the\\nproject. See #283 for more.\\nHow does Ruff\\'s import sorting compare to isort?#\\nRuff\\'s import sorting is intended to be nearly equivalent to isort when used profile = \"black\".\\nThere are a few known, minor differences in how Ruff and isort break ties between similar imports,\\nand in how Ruff and isort treat inline comments in some cases (see: #1381,\\n#2104).\\nLike isort, Ruff\\'s import sorting is compatible with Black.\\nRuff does not yet support all of isort\\'s configuration options, though it does support many of\\nthem. You can find the supported settings in the API reference.\\nFor example, you can set known-first-party like so:\\n[tool.ruff]\\nselect = [\\n    # Pyflakes\\n    \"F\",\\n    # Pycodestyle\\n    \"E\",\\n    \"W\",\\n    # isort\\n    \"I001\"\\n]\\n\\n# Note: Ruff supports a top-level `src` option in lieu of isort\\'s `src_paths` setting.\\nsrc = [\"src\", \"tests\"]\\n\\n[tool.ruff.isort]\\nknown-first-party = [\"my_module1\", \"my_module2\"]\\n\\nDoes Ruff support Jupyter Notebooks?#\\nRuff is integrated into nbQA, a tool for running linters and\\ncode formatters over Jupyter Notebooks.\\nAfter installing ruff and nbqa, you can run Ruff over a notebook like so:\\n> nbqa ruff Untitled.ipynb\\nUntitled.ipynb:cell_1:2:5: F841 Local variable `x` is assigned to but never used\\nUntitled.ipynb:cell_2:1:1: E402 Module level import not at top of file\\nUntitled.ipynb:cell_2:1:8: F401 `os` imported but unused\\nFound 3 errors.\\n1 potentially fixable with the --fix option.\\n\\nDoes Ruff support NumPy- or Google-style docstrings?#\\nYes! To enable specific docstring convention, add the following to your pyproject.toml:\\n[tool.ruff.pydocstyle]\\nconvention = \"google\"  # Accepts: \"google\", \"numpy\", or \"pep257\".\\n\\nFor example, if you\\'re coming from flake8-docstrings, and your originating configuration uses\\n--docstring-convention=numpy, you\\'d instead set convention = \"numpy\" in your pyproject.toml,\\nas above.\\nAlongside convention, you\\'ll want to explicitly enable the D rule code prefix, like so:\\n[tool.ruff]\\nselect = [\\n    \"D\",\\n]\\n\\n[tool.ruff.pydocstyle]\\nconvention = \"google\"\\n\\nSetting a convention force-disables any rules that are incompatible with that convention, no\\nmatter how they\\'re provided, which avoids accidental incompatibilities and simplifies configuration.\\nHow can I tell what settings Ruff is using to check my code?#\\nRun ruff check /path/to/code.py --show-settings to view the resolved settings for a given file.\\nI want to use Ruff, but I don\\'t want to use pyproject.toml. Is that possible?#\\nYes! In lieu of a pyproject.toml file, you can use a ruff.toml file for configuration. The two\\nfiles are functionally equivalent and have an identical schema, with the exception that a ruff.toml\\nfile can omit the [tool.ruff] section header.\\nFor example, given this pyproject.toml:\\n[tool.ruff]\\nline-length = 88\\n\\n[tool.ruff.pydocstyle]\\nconvention = \"google\"\\n\\nYou could instead use a ruff.toml file like so:\\nline-length = 88\\n\\n[pydocstyle]\\nconvention = \"google\"\\n\\nRuff doesn\\'t currently support INI files, like setup.cfg or tox.ini.\\nHow can I change Ruff\\'s default configuration?#\\nWhen no configuration file is found, Ruff will look for a user-specific pyproject.toml or\\nruff.toml file as a last resort. This behavior is similar to Flake8\\'s ~/.config/flake8.\\nOn macOS, Ruff expects that file to be located at /Users/Alice/Library/Application Support/ruff/ruff.toml.\\nOn Linux, Ruff expects that file to be located at /home/alice/.config/ruff/ruff.toml.\\nOn Windows, Ruff expects that file to be located at C:\\\\Users\\\\Alice\\\\AppData\\\\Roaming\\\\ruff\\\\ruff.toml.\\nFor more, see the dirs crate.\\nRuff tried to fix something — but it broke my code?#\\nRuff\\'s autofix is a best-effort mechanism. Given the dynamic nature of Python, it\\'s difficult to\\nhave complete certainty when making changes to code, even for the seemingly trivial fixes.\\nIn the future, Ruff will support enabling autofix behavior based on the safety of the patch.\\nIn the meantime, if you find that the autofix is too aggressive, you can disable it on a per-rule or\\nper-category basis using the unfixable mechanic.\\nFor example, to disable autofix for some possibly-unsafe rules, you could add the following to your\\npyproject.toml:\\n[tool.ruff]\\nunfixable = [\"B\", \"SIM\", \"TRY\", \"RUF\"]\\n\\nIf you find a case where Ruff\\'s autofix breaks your code, please file an Issue!\\nHow can I disable Ruff\\'s color output?#\\nRuff\\'s color output is powered by the colored crate, which\\nattempts to automatically detect whether the output stream supports color. However, you can force\\ncolors off by setting the NO_COLOR environment variable to any value (e.g., NO_COLOR=1).\\ncolored also supports the the CLICOLOR and CLICOLOR_FORCE\\nenvironment variables (see the spec).\\n\\n\\n\\n\\n\\nBack to top\\n\\n\\n\\n\\n\\n\\nMade with\\n\\nMaterial for MkDocs\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n', metadata={'source': 'https://beta.ruff.rs/docs/faq/'})]\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2680/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2680/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2679",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2679/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2679/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2679/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2679",
        "id": 1661258754,
        "node_id": "I_kwDOIPDwls5jBMwC",
        "number": 2679,
        "title": "Chat agent does not parse properly when model returns a code block",
        "user": {
            "login": "sachit-menon",
            "id": 21482705,
            "node_id": "MDQ6VXNlcjIxNDgyNzA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/21482705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sachit-menon",
            "html_url": "https://github.com/sachit-menon",
            "followers_url": "https://api.github.com/users/sachit-menon/followers",
            "following_url": "https://api.github.com/users/sachit-menon/following{/other_user}",
            "gists_url": "https://api.github.com/users/sachit-menon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sachit-menon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sachit-menon/subscriptions",
            "organizations_url": "https://api.github.com/users/sachit-menon/orgs",
            "repos_url": "https://api.github.com/users/sachit-menon/repos",
            "events_url": "https://api.github.com/users/sachit-menon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sachit-menon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T19:41:05Z",
        "updated_at": "2023-04-10T19:41:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When you ask GPT to produce code, you get an error since the way responses are parsed splits the cleaned output by triple backticks, which doesn't account for possible usage of triple backticks in the output itself. \r\n\r\n\r\nTo reproduce:\r\n```python\r\nllm = ChatOpenAI(model_name=\"gpt-3.5-turbo\")\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n\r\ntools = load_tools([\"llm-math\"], llm=llm)\r\nagent = initialize_agent(tools, \r\n                         llm, \r\n                         agent=AgentType.CHAT_CONVERSATIONAL_REACT_DESCRIPTION, \r\n                         verbose=True, \r\n                         memory=memory)\r\n\r\n\r\nagent.run(input='Write a program for Hello World in Python.')\r\n```\r\n\r\nTraceback:\r\n~~~\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nFile [~/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/agents/conversational_chat/base.py:106](https://vscode-interactive+.vscode-resource.vscode-cdn.net//~/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/agents/conversational_chat/base.py:106), in ConversationalChatAgent._extract_tool_and_input(self, llm_output)\r\n    [105](file:///Users/sachit/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/agents/conversational_chat/base.py?line=104) try:\r\n--> [106](file:///Users/sachit/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/agents/conversational_chat/base.py?line=105)     response = self.output_parser.parse(llm_output)\r\n    [107](file:///Users/sachit/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/agents/conversational_chat/base.py?line=106)     return response[\"action\"], response[\"action_input\"]\r\n\r\nFile [~/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/agents/conversational_chat/base.py:43](https://vscode-interactive+.vscode-resource.vscode-cdn.net//~/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/agents/conversational_chat/base.py:43), in AgentOutputParser.parse(self, text)\r\n     [42](file:///Users/sachit/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/agents/conversational_chat/base.py?line=41) if \"```\" in cleaned_output:\r\n---> [43](file:///Users/sachit/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/agents/conversational_chat/base.py?line=42)     cleaned_output, _ = cleaned_output.split(\"```\")\r\n     [44](file:///Users/sachit/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/agents/conversational_chat/base.py?line=43) if cleaned_output.startswith(\"```json\"):\r\n\r\nValueError: too many values to unpack (expected 2)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n[/Users/sachit/Documents/Documents](https://vscode-interactive+.vscode-resource.vscode-cdn.net/Users/sachit/Documents/Documents) - Sachit’s MacBook Pro[/Projects/ai_assistant/import](https://vscode-interactive+.vscode-resource.vscode-cdn.net/Projects/ai_assistant/import) openai.py in line 1\r\n----> [38](file:///Users/sachit/Documents/Documents%20-%20Sachit%E2%80%99s%20MacBook%20Pro/Projects/ai_assistant/import%20openai.py?line=37) agent.run(input=query)\r\n\r\nFile [~/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/chains/base.py:216](https://vscode-interactive+.vscode-resource.vscode-cdn.net//~/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/chains/base.py:216), in Chain.run(self, *args, **kwargs)\r\n    [213](file:///Users/sachit/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/chains/base.py?line=212)     return self(args[0])[self.output_keys[0]]\r\n    [215](file:///Users/sachit/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/chains/base.py?line=214) if kwargs and not args:\r\n--> [216](file:///Users/sachit/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/chains/base.py?line=215)     return self(kwargs)[self.output_keys[0]]\r\n    [218](file:///Users/sachit/opt/miniconda3/envs/misc/lib/python3.10/site-packages/langchain/chains/base.py?line=217) raise ValueError(\r\n...\r\n{\r\n    \"action\": \"Final Answer\",\r\n    \"action_input\": \"Here is an example program for 'Hello World' in Python: \\n\\n```python\\nprint('Hello, World!')\\n```\"\r\n}\r\n```\r\n\r\n~~~",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2679/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2679/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2677",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2677/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2677/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2677/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2677",
        "id": 1661183616,
        "node_id": "I_kwDOIPDwls5jA6aA",
        "number": 2677,
        "title": "Langchain should use tiktoken tokenizer for python 3.8",
        "user": {
            "login": "ivan-shatsilenia",
            "id": 13257574,
            "node_id": "MDQ6VXNlcjEzMjU3NTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13257574?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ivan-shatsilenia",
            "html_url": "https://github.com/ivan-shatsilenia",
            "followers_url": "https://api.github.com/users/ivan-shatsilenia/followers",
            "following_url": "https://api.github.com/users/ivan-shatsilenia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ivan-shatsilenia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ivan-shatsilenia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ivan-shatsilenia/subscriptions",
            "organizations_url": "https://api.github.com/users/ivan-shatsilenia/orgs",
            "repos_url": "https://api.github.com/users/ivan-shatsilenia/repos",
            "events_url": "https://api.github.com/users/ivan-shatsilenia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ivan-shatsilenia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T18:40:46Z",
        "updated_at": "2023-04-10T18:40:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I noticed that `langchain` will not try to use the `tiktoken` tokenizer if python version is 3.8 and will switch to Hugging Face tokenizer instead ([see line 331 here](https://github.com/hwchase17/langchain/blob/master/langchain/chat_models/openai.py)). It assumes that `tiktoken` does not support python 3.8. However this does not seem to be the case (see [line 10 here](https://github.com/openai/tiktoken/blob/main/pyproject.toml)).",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2677/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2677/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2675",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2675/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2675/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2675/events",
        "html_url": "https://github.com/hwchase17/langchain/pull/2675",
        "id": 1661076385,
        "node_id": "PR_kwDOIPDwls5N8y6s",
        "number": 2675,
        "title": "NIT: Instead of hardcoding k in each definition, define it as a param above.",
        "user": {
            "login": "scafati98",
            "id": 70337583,
            "node_id": "MDQ6VXNlcjcwMzM3NTgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/70337583?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scafati98",
            "html_url": "https://github.com/scafati98",
            "followers_url": "https://api.github.com/users/scafati98/followers",
            "following_url": "https://api.github.com/users/scafati98/following{/other_user}",
            "gists_url": "https://api.github.com/users/scafati98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scafati98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scafati98/subscriptions",
            "organizations_url": "https://api.github.com/users/scafati98/orgs",
            "repos_url": "https://api.github.com/users/scafati98/repos",
            "events_url": "https://api.github.com/users/scafati98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scafati98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T17:06:20Z",
        "updated_at": "2023-04-10T18:50:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/hwchase17/langchain/pulls/2675",
            "html_url": "https://github.com/hwchase17/langchain/pull/2675",
            "diff_url": "https://github.com/hwchase17/langchain/pull/2675.diff",
            "patch_url": "https://github.com/hwchase17/langchain/pull/2675.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2675/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2675/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2674",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2674/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2674/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2674/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2674",
        "id": 1660990166,
        "node_id": "I_kwDOIPDwls5jALLW",
        "number": 2674,
        "title": "GPT4All and create_csv_agent : llama_generate: error: prompt is too long (680 tokens, max 508)",
        "user": {
            "login": "Tukks",
            "id": 5930169,
            "node_id": "MDQ6VXNlcjU5MzAxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5930169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tukks",
            "html_url": "https://github.com/Tukks",
            "followers_url": "https://api.github.com/users/Tukks/followers",
            "following_url": "https://api.github.com/users/Tukks/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tukks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tukks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tukks/subscriptions",
            "organizations_url": "https://api.github.com/users/Tukks/orgs",
            "repos_url": "https://api.github.com/users/Tukks/repos",
            "events_url": "https://api.github.com/users/Tukks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tukks/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T15:59:17Z",
        "updated_at": "2023-04-10T15:59:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I don't want to use ChatGpt, I want to use a local \"chatgpt\"\r\nSo I tried this example with GPT4All https://python.langchain.com/en/latest/modules/agents/toolkits/examples/csv.html\r\n\r\n```python\r\nfrom langchain.llms import GPT4All\r\nfrom langchain import PromptTemplate, LLMChain\r\nfrom langchain.agents import create_csv_agent\r\nimport pandas as pd\r\n\r\ndf = pd.read_csv('./titles.csv')\r\n\r\nmodel = GPT4All(model=\"./models/ggml-alpaca-7b-q4-new.bin\")\r\nagent = create_csv_agent(model, './titles.csv', verbose=True)\r\n>>> agent.run(\"how many rows are there?\")\r\n\r\n```\r\n\r\nI have the error : llama_generate: error: prompt is too long (680 tokens, max 508)\r\n\r\nTried with `model = GPT4All(model=\"./models/ggml-alpaca-7b-q4-new.bin\")` and `model = GPT4All(model=\"C:\\\\Users\\\\glapenta\\\\Workspace\\\\python\\\\models\\\\ggml-alpaca-7b-q4-new.bin\", n_ctx=1024, n_threads=8)` \r\nI have this error with n_ctx at 1024 llama_generate: error: prompt is too long (1056 tokens, max 1020)\r\n\r\nHere's the full stack : \r\n\r\n```\r\n>>> agent.run(\"how many rows are there?\")\r\n\r\n\r\n> Entering new AgentExecutor chain...\r\nllama_generate: seed = 1680965712\r\n\r\nsystem_info: n_threads = 4 / 8 | AVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 |\r\nsampling: temp = 0.800000, top_k = 40, top_p = 0.950000, repeat_last_n = 64, repeat_penalty = 1.300000\r\ngenerate: n_ctx = 512, n_batch = 1, n_predict = 256, n_keep = 0\r\n\r\n\r\n [end of text]\r\n\r\nllama_print_timings:        load time = 74735.64 ms\r\nllama_print_timings:      sample time =    51.08 ms /   116 runs   (    0.44 ms per run)\r\nllama_print_timings: prompt eval time = 136599.33 ms /   514 tokens (  265.76 ms per token)\r\nllama_print_timings:        eval time = 854042.23 ms /  1599 runs   (  534.11 ms per run)\r\nllama_print_timings:       total time = 61952108.58 ms\r\n\r\nYou are working with a pandas dataframe in Python. The name of the dataframe is `df`.\r\nYou should use the tools below to answer the question posed of you:\r\n\r\npython_repl_ast: A Python shell. Use this to execute python commands. Input should be a valid python command. When using this tool, sometimes output is abbreviated - make sure it does not look abbreviated before using it in your answer.\r\n\r\nUse the following format:\r\n\r\nQuestion: the input question you must answer\r\nThought: you should always think about what to do\r\nAction: the action to take, should be one of [python_repl_ast]\r\nAction Input: the input to the action\r\nObservation: the action to take, should be one of [python_repl_ast] is not a valid tool, try another one.\r\nThought:llama_generate: seed = 1680965951\r\n\r\nsystem_info: n_threads = 4 / 8 | AVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 |\r\nllama_generate: error: prompt is too long (678 tokens, max 508)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\glapenta\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\chains\\base.py\", line 213, in run\r\n    return self(args[0])[self.output_keys[0]]\r\n  File \"C:\\Users\\glapenta\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\chains\\base.py\", line 116, in __call__\r\n    raise e\r\n  File \"C:\\Users\\glapenta\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\chains\\base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n  File \"C:\\Users\\glapenta\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\agents\\agent.py\", line 790, in _call\r\n    next_step_output = self._take_next_step(\r\n  File \"C:\\Users\\glapenta\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\agents\\agent.py\", line 679, in _take_next_step\r\n    output = self.agent.plan(intermediate_steps, **inputs)\r\n  File \"C:\\Users\\glapenta\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\agents\\agent.py\", line 398, in plan\r\n    action = self._get_next_action(full_inputs)\r\n  File \"C:\\Users\\glapenta\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\agents\\agent.py\", line 360, in _get_next_action\r\n    parsed_output = self._extract_tool_and_input(full_output)\r\n  File \"C:\\Users\\glapenta\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\agents\\mrkl\\base.py\", line 140, in _extract_tool_and_input\r\n    return get_action_and_input(text)\r\n  File \"C:\\Users\\glapenta\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\site-packages\\langchain\\agents\\mrkl\\base.py\", line 48, in get_action_and_input\r\n    raise ValueError(f\"Could not parse LLM output: `{llm_output}`\")\r\nValueError: Could not parse LLM output: ``\r\n```\r\n\r\n\r\nGreat framework !",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2674/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2674/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2673",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2673/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2673/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2673/events",
        "html_url": "https://github.com/hwchase17/langchain/pull/2673",
        "id": 1660986141,
        "node_id": "PR_kwDOIPDwls5N8fZw",
        "number": 2673,
        "title": "Added bilibili loader",
        "user": {
            "login": "liaokongVFX",
            "id": 13622183,
            "node_id": "MDQ6VXNlcjEzNjIyMTgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/13622183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liaokongVFX",
            "html_url": "https://github.com/liaokongVFX",
            "followers_url": "https://api.github.com/users/liaokongVFX/followers",
            "following_url": "https://api.github.com/users/liaokongVFX/following{/other_user}",
            "gists_url": "https://api.github.com/users/liaokongVFX/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liaokongVFX/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liaokongVFX/subscriptions",
            "organizations_url": "https://api.github.com/users/liaokongVFX/orgs",
            "repos_url": "https://api.github.com/users/liaokongVFX/repos",
            "events_url": "https://api.github.com/users/liaokongVFX/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liaokongVFX/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T15:57:47Z",
        "updated_at": "2023-04-11T09:13:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/hwchase17/langchain/pulls/2673",
            "html_url": "https://github.com/hwchase17/langchain/pull/2673",
            "diff_url": "https://github.com/hwchase17/langchain/pull/2673.diff",
            "patch_url": "https://github.com/hwchase17/langchain/pull/2673.patch",
            "merged_at": null
        },
        "body": "I've added a bilibili loader, bilibili is a very active video site in China and I think we need this loader.\r\n\r\nExample:\r\n```python\r\nfrom langchain.document_loaders.bilibili import BiliBiliLoader\r\n\r\nloader = BiliBiliLoader(\r\n       [\"https://www.bilibili.com/video/BV1xt411o7Xu/\",\r\n       \"https://www.bilibili.com/video/av330407025/\"]\r\n)\r\ndocs = loader.load()\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2673/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2673/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2672",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2672/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2672/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2672/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2672",
        "id": 1660977208,
        "node_id": "I_kwDOIPDwls5jAIA4",
        "number": 2672,
        "title": "Which Chain or Agent to Use for Creating GET Requests from Natural Language Queries with One or Many OpenAPI Specifications? Without an LLM interpretation of the API response.",
        "user": {
            "login": "nick-gibb",
            "id": 3398606,
            "node_id": "MDQ6VXNlcjMzOTg2MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3398606?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nick-gibb",
            "html_url": "https://github.com/nick-gibb",
            "followers_url": "https://api.github.com/users/nick-gibb/followers",
            "following_url": "https://api.github.com/users/nick-gibb/following{/other_user}",
            "gists_url": "https://api.github.com/users/nick-gibb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nick-gibb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nick-gibb/subscriptions",
            "organizations_url": "https://api.github.com/users/nick-gibb/orgs",
            "repos_url": "https://api.github.com/users/nick-gibb/repos",
            "events_url": "https://api.github.com/users/nick-gibb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nick-gibb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T15:52:09Z",
        "updated_at": "2023-04-10T17:25:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I _just_ want to form the GET request URL. It can then be executed either within LangChain or simply returned. I do not want to use a LLM to interpret the JSON response.\r\n\r\nI've been trying with `OpenAPIEndpointChain` and I can't seem to find a way to exit early without having the LLM try to digest the JSON returned from the API.\r\n\r\nHere's the relevant point at the code that I'd like to exit early on: https://github.com/hwchase17/langchain/blob/master/langchain/chains/api/openapi/chain.py#L147",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2672/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2671",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2671/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2671/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2671/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2671",
        "id": 1660969090,
        "node_id": "I_kwDOIPDwls5jAGCC",
        "number": 2671,
        "title": "Question: How to Guide Chatbot?",
        "user": {
            "login": "mertozlutiras",
            "id": 54659709,
            "node_id": "MDQ6VXNlcjU0NjU5NzA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/54659709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mertozlutiras",
            "html_url": "https://github.com/mertozlutiras",
            "followers_url": "https://api.github.com/users/mertozlutiras/followers",
            "following_url": "https://api.github.com/users/mertozlutiras/following{/other_user}",
            "gists_url": "https://api.github.com/users/mertozlutiras/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mertozlutiras/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mertozlutiras/subscriptions",
            "organizations_url": "https://api.github.com/users/mertozlutiras/orgs",
            "repos_url": "https://api.github.com/users/mertozlutiras/repos",
            "events_url": "https://api.github.com/users/mertozlutiras/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mertozlutiras/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T15:44:30Z",
        "updated_at": "2023-04-10T15:44:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm trying to understand the best ways to design a custom chatbot using langchain.\r\n\r\nIn the chatbot design, I would like to give some guidance to chatbot in the following fashion:\r\n\r\n- When user inputs their name, always use it to address them.\r\n- Ask the user if they are willing to answer a few questions.\r\n- If the user is not interested, say something like: \"No problem $NAME, I understand. If you change your mind feel free to reach out to me anytime.\"\r\n...\r\n\r\nI don't want to give all these guidelines to the model in the beginning as it might confuse all at once.\r\nI think a better approach would be introducing each guideline when it is needed.\r\n\r\nI thought defining separate Tools for each of these guidelines could be an option. I would like to see what others think though.\r\n\r\nWhat would be the best way to guide an LLM based chatbot?",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2671/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2671/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2666",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2666/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2666/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2666/events",
        "html_url": "https://github.com/hwchase17/langchain/pull/2666",
        "id": 1660735061,
        "node_id": "PR_kwDOIPDwls5N7ptR",
        "number": 2666,
        "title": "Make the OpenAPI agent's verbose print optional",
        "user": {
            "login": "dogancanbakir",
            "id": 65292895,
            "node_id": "MDQ6VXNlcjY1MjkyODk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/65292895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dogancanbakir",
            "html_url": "https://github.com/dogancanbakir",
            "followers_url": "https://api.github.com/users/dogancanbakir/followers",
            "following_url": "https://api.github.com/users/dogancanbakir/following{/other_user}",
            "gists_url": "https://api.github.com/users/dogancanbakir/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dogancanbakir/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dogancanbakir/subscriptions",
            "organizations_url": "https://api.github.com/users/dogancanbakir/orgs",
            "repos_url": "https://api.github.com/users/dogancanbakir/repos",
            "events_url": "https://api.github.com/users/dogancanbakir/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dogancanbakir/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T12:44:44Z",
        "updated_at": "2023-04-10T14:58:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/hwchase17/langchain/pulls/2666",
            "html_url": "https://github.com/hwchase17/langchain/pull/2666",
            "diff_url": "https://github.com/hwchase17/langchain/pull/2666.diff",
            "patch_url": "https://github.com/hwchase17/langchain/pull/2666.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2666/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2666/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/hwchase17/langchain/issues/2665",
        "repository_url": "https://api.github.com/repos/hwchase17/langchain",
        "labels_url": "https://api.github.com/repos/hwchase17/langchain/issues/2665/labels{/name}",
        "comments_url": "https://api.github.com/repos/hwchase17/langchain/issues/2665/comments",
        "events_url": "https://api.github.com/repos/hwchase17/langchain/issues/2665/events",
        "html_url": "https://github.com/hwchase17/langchain/issues/2665",
        "id": 1660655448,
        "node_id": "I_kwDOIPDwls5i-5dY",
        "number": 2665,
        "title": "plan_str has 2 references to GET keyword which causes the OpenAPI agent to raise value error when an endpoint is not found",
        "user": {
            "login": "abhi1693",
            "id": 5083532,
            "node_id": "MDQ6VXNlcjUwODM1MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5083532?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abhi1693",
            "html_url": "https://github.com/abhi1693",
            "followers_url": "https://api.github.com/users/abhi1693/followers",
            "following_url": "https://api.github.com/users/abhi1693/following{/other_user}",
            "gists_url": "https://api.github.com/users/abhi1693/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abhi1693/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abhi1693/subscriptions",
            "organizations_url": "https://api.github.com/users/abhi1693/orgs",
            "repos_url": "https://api.github.com/users/abhi1693/repos",
            "events_url": "https://api.github.com/users/abhi1693/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abhi1693/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-10T11:30:33Z",
        "updated_at": "2023-04-10T11:30:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm generating a bot for the schema at https://beta-demo.netbox.dev/api/schema. I have been able to minify the spec to get the plan string which goes like\r\n\r\n```\r\n1. GET /api/dcim/devices/ to retrieve all devices\r\n2. Filter the devices by status to only include those with an active status. This can be done by adding a query parameter to the GET request, such as \"?status=active\".\r\n3. Return the filtered list of devices with active status.\r\n```\r\n\r\nThe above causes the code to fail with endpoint not found. This is invoked at https://github.com/hwchase17/langchain/blob/master/langchain/agents/agent_toolkits/openapi/planner.py#L169.\r\n\r\nWhen I looked into it more thoroughly, I found out the `re.findall` is causing issues with returning `GET` with no endpoint which looks like\r\n\r\n```\r\n[('GET', '/api/dcim/devices/'), ('GET', '')]\r\n```\r\n\r\nThe code should execute as it does have a valid endpoint, but due to the 2nd GET with no endpoint, it fails.",
        "reactions": {
            "url": "https://api.github.com/repos/hwchase17/langchain/issues/2665/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/hwchase17/langchain/issues/2665/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]